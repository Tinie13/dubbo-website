<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Apache Dubbo – 配置手册</title><link>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/config/</link><description>Recent content in 配置手册 on Apache Dubbo</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/config/index.xml" rel="self" type="application/rss+xml"/><item><title>Overview: 配置手册</title><link>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/config/spring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/config/spring/</guid><description/></item><item><title>Overview: 配置手册</title><link>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/config/api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/config/api/</guid><description/></item><item><title>Overview: 配置工作原理</title><link>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/config/principle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/config/principle/</guid><description>
&lt;p>本文主要讲解 Dubbo 配置相关的 API 与工作原理，学习 Dubbo 的多种配置源、每种配置源的具体配置方式、不同配置源之间的优先级与覆盖关系。&lt;/p>
&lt;h2 id="实现原理">实现原理&lt;/h2>
&lt;p>为了更好地管理各种配置，Dubbo 抽象了一套结构化的配置组件，各组件总体以用途划分，分别控制不同作用域的行为。&lt;/p>
&lt;p>&lt;img src="https://dubbo.apache.org/imgs/user/dubbo-config.jpg" alt="dubbo-config">&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>组件名称&lt;/th>
&lt;th>描述&lt;/th>
&lt;th>范围&lt;/th>
&lt;th>是否必须配置&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>application&lt;/td>
&lt;td>指定应用名等应用级别相关信息&lt;/td>
&lt;td>一个应用内只允许出现一个&lt;/td>
&lt;td>必选&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>service&lt;/td>
&lt;td>声明普通接口或实现类为 Dubbo 服务&lt;/td>
&lt;td>一个应用内可以有 0 到多个 service&lt;/td>
&lt;td>service/reference 至少一种&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>reference&lt;/td>
&lt;td>声明普通接口为 Dubbo 服务&lt;/td>
&lt;td>一个应用内可以有 0 到多个 reference&lt;/td>
&lt;td>service/reference 至少一种&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>protocol&lt;/td>
&lt;td>要暴露的 RPC 协议及相关配置如端口号等&lt;/td>
&lt;td>一个应用可配置多个，一个 protocol 可作用于一组 service&amp;amp;reference&lt;/td>
&lt;td>可选，默认 dubbo&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>registry&lt;/td>
&lt;td>注册中心类型、地址及相关配置&lt;/td>
&lt;td>一个应用内可配置多个，一个 registry 可作用于一组 service&amp;amp;reference&lt;/td>
&lt;td>必选&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>config-center&lt;/td>
&lt;td>配置中心类型、地址及相关配置&lt;/td>
&lt;td>一个应用内可配置多个，所有服务共享&lt;/td>
&lt;td>可选&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>metadata-report&lt;/td>
&lt;td>元数据中心类型、地址及相关配置&lt;/td>
&lt;td>一个应用内可配置多个，所有服务共享&lt;/td>
&lt;td>可选&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>consumer&lt;/td>
&lt;td>reference 间共享的默认配置&lt;/td>
&lt;td>一个应用内可配置多个，一个 consumer 可作用于一组 reference&lt;/td>
&lt;td>可选&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider&lt;/td>
&lt;td>service 间共享的默认配置&lt;/td>
&lt;td>一个应用内可配置多个，一个 provider 可作用于一组 service&lt;/td>
&lt;td>可选&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>monitor&lt;/td>
&lt;td>监控系统类型及地址&lt;/td>
&lt;td>一个应用内只允许配置一个&lt;/td>
&lt;td>可选&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>metrics&lt;/td>
&lt;td>数据采集模块相关配置&lt;/td>
&lt;td>一个应用内只允许配置一个&lt;/td>
&lt;td>可选&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ssl&lt;/td>
&lt;td>ssl/tls 安全链接相关的证书等配置&lt;/td>
&lt;td>一个应用内只允许配置一个&lt;/td>
&lt;td>可选&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>method&lt;/td>
&lt;td>指定方法级的配置&lt;/td>
&lt;td>service 和 reference 的子配置&lt;/td>
&lt;td>可选&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>argument&lt;/td>
&lt;td>某个方法的参数配置&lt;/td>
&lt;td>method的子配置&lt;/td>
&lt;td>可选&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>从实现原理层面，最终 Dubbo 所有的配置项都会被组装到 URL 中，以 URL 为载体在后续的启动、RPC 调用过程中传递，进而控制框架行为。如想了解更多，请参照 Dubbo 源码解析系列文档或 &lt;a href="https://dubbo.apache.org/zh-cn/blog/2019/10/17/dubbo-%E4%B8%AD%E7%9A%84-url-%E7%BB%9F%E4%B8%80%E6%A8%A1%E5%9E%8B/#rpc%E8%B0%83%E7%94%A8">Blog&lt;/a>。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>各组件支持的具体配置项及含义请参考 &lt;a href="../properties">配置项手册&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">注意&lt;/h4>
&lt;p>&lt;strong>背景&lt;/strong>&lt;/p>
&lt;p>在每个dubbo应用中某些种类的配置类实例只能出现一次（比如&lt;code>ApplicationConfig&lt;/code>、&lt;code>MonitorConfig&lt;/code>、&lt;code>MetricsConfig&lt;/code>、&lt;code>SslConfig&lt;/code>、&lt;code>ModuleConfig&lt;/code>），有些能出现多次（比如&lt;code>RegistryConfig&lt;/code>、&lt;code>ProtocolConfig&lt;/code>等）。&lt;/p>
&lt;p>如果应用程序意外的扫描到了多个唯一配置类实例（比如用户在一个dubbo应用中错误了配置了两个&lt;code>ApplicationConfig&lt;/code>），应该以哪种策略来处理这种情况呢？是直接抛异常？是保留前者忽略后者？是忽略前者保留后者？还是允许某一种形式的并存（比如后者的属性覆盖到前者上）？&lt;/p>
&lt;p>目前dubbo中的唯一配置类类型和以及某唯一配置类型找到多个实例允许的配置模式/策略如下。&lt;/p>
&lt;p>&lt;strong>唯一配置类类型&lt;/strong>&lt;/p>
&lt;p>&lt;code>ApplicationConfig&lt;/code>、&lt;code>MonitorConfig&lt;/code>、&lt;code>MetricsConfig&lt;/code>、&lt;code>SslConfig&lt;/code>、&lt;code>ModuleConfig&lt;/code>。&lt;/p>
&lt;p>前四个属于应用级别的，最后一个属于模块级别的。&lt;/p>
&lt;p>&lt;strong>配置模式&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>strict&lt;/code>：严格模式。直接抛异常。&lt;/li>
&lt;li>&lt;code>override&lt;/code>：覆盖模式。忽略前者保留后者。&lt;/li>
&lt;li>&lt;code>ignore&lt;/code>：忽略模式。忽略后者保留前者。&lt;/li>
&lt;li>&lt;code>override_all&lt;/code>：属性覆盖模式。不管前者的属性值是否为空，都将后者的属性覆盖/设置到前者上。&lt;/li>
&lt;li>&lt;code>override_if_absent&lt;/code>：若不存在则属性覆盖模式。只有前者对应属性值为空，才将后者的属性覆盖/设置到前者上。&lt;/li>
&lt;/ul>
&lt;p>注：后两种还影响配置实例的属性覆盖。因为dubbo有多种配置方式，即存在多个配置源，配置源也有优先级。比如通过xml方式配置了一个&lt;code>ServiceConfig&lt;/code>且指定属性&lt;code>version=1.0.0&lt;/code>，同时我们又在外部配置(配置中心)中配置了&lt;code>dubbo.service.{interface}.version=2.0.0&lt;/code>，在没有引入&lt;code>config-mode&lt;/code>配置项之前，按照原有的配置源优先级，最终实例的&lt;code>version=2.0.0&lt;/code>。但是引入了&lt;code>config-mode&lt;/code>配置项之后，配置优先级规则也不再那么严格，即如果指定&lt;code>config-mode为override_all&lt;/code>则为&lt;code>version=2.0.0&lt;/code>，如果&lt;code>config-mode为override_if_absent&lt;/code>则为&lt;code>version=1.0.0&lt;/code>，&lt;code>config-mode&lt;/code>为其他值则遵循原有配置优先级进行属性设值/覆盖。&lt;/p>
&lt;p>&lt;strong>配置方式&lt;/strong>&lt;/p>
&lt;p>配置的key为&lt;code>dubbo.config.mode&lt;/code>，配置的值为如上描述的几种，默认的策略值为&lt;code>strict&lt;/code>。下面展示了配置示例&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># JVM -D&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-Ddubbo.config.mode&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">strict&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># 环境变量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DUBBO_CONFIG_MODE&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">strict&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># 外部配置(配置中心)、Spring应用的Environment、dubbo.properties&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.config.mode&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">strict&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h3 id="service-与-reference">service 与 reference&lt;/h3>
&lt;p>&lt;code>service&lt;/code> 与 &lt;code>reference&lt;/code> 是 Dubbo 最基础的两个配置项，它们用来将某个指定的接口或实现类注册为 Dubbo 服务，并通过配置项控制服务的行为。&lt;/p>
&lt;ul>
&lt;li>&lt;code>service&lt;/code> 用于服务提供者端，通过 &lt;code>service&lt;/code> 配置的接口和实现类将被定义为标准的 Dubbo 服务，从而实现对外提供 RPC 请求服务。&lt;/li>
&lt;li>&lt;code>reference&lt;/code> 用于服务消费者端，通过 &lt;code>reference&lt;/code> 配置的接口将被定义为标准的 Dubbo 服务，生成的 proxy 可发起对远端的 RPC 请求。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>一个应用中可以配置任意多个 &lt;code>service&lt;/code> 与 &lt;code>reference&lt;/code>。&lt;/p>
&lt;/blockquote>
&lt;h3 id="consumer-与-provider">consumer 与 provider&lt;/h3>
&lt;ul>
&lt;li>当应用内有多个 &lt;code>reference&lt;/code> 配置时，&lt;code>consumer&lt;/code> 指定了这些 &lt;code>reference&lt;/code> 共享的默认值，如共享的超时时间等以简化繁琐的配置，如某个 &lt;code>reference&lt;/code> 中单独设置了配置项值则该 &lt;code>reference&lt;/code> 中的配置优先级更高。&lt;/li>
&lt;li>当应用内有多个 &lt;code>service&lt;/code> 配置时，&lt;code>provider&lt;/code> 指定了这些 &lt;code>service&lt;/code> 共享的默认值，如某个 &lt;code>service&lt;/code> 中单独设置了配置项值则该 &lt;code>service&lt;/code> 中的配置优先级更高。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>consumer 组件还可以对 reference 进行虚拟分组，不通分组下的 reference 可有不同的 consumer 默认值设定；如在 XML 格式配置中，&amp;lt;dubbo:reference /&amp;gt; 标签可通过嵌套在 &amp;lt;dubbo:consumer /&amp;gt; 标签之中实现分组。provider 与 service 之间也可以实现相同的效果。&lt;/p>
&lt;/blockquote>
&lt;h2 id="配置方式">配置方式&lt;/h2>
&lt;h3 id="属性配置">属性配置&lt;/h3>
&lt;p>根据属性Key-value生成配置组件，类似SpringBoot的ConfigurationProperties，具体请参考&lt;a href="../properties">属性配置&lt;/a>。&lt;/p>
&lt;p>属性配置的另外一个重要的功能特性是&lt;a href="../principle/#32-%E5%B1%9E%E6%80%A7%E8%A6%86%E7%9B%96">属性覆盖&lt;/a>，使用外部属性的值覆盖已创建的配置组件属性。&lt;/p>
&lt;p>如果要将属性配置放到外部的配置中心，请参考&lt;a href="../principle/#33-%E5%A4%96%E9%83%A8%E5%8C%96%E9%85%8D%E7%BD%AE">外部化配置&lt;/a>。&lt;/p>
&lt;p>除了外围驱动方式上的差异，Dubbo 的配置读取总体上遵循了以下几个原则：&lt;/p>
&lt;ol>
&lt;li>Dubbo 支持了多层级的配置，并按预定优先级自动实现配置间的覆盖，最终所有配置汇总到数据总线URL后驱动后续的服务暴露、引用等流程。&lt;/li>
&lt;li>配置格式以 Properties 为主，在配置内容上遵循约定的 &lt;code>path-based&lt;/code> 的&lt;a href="../principle/#1-%E9%85%8D%E7%BD%AE%E6%A0%BC%E5%BC%8F">命名规范&lt;/a>&lt;/li>
&lt;/ol>
&lt;h3 id="api-配置">API 配置&lt;/h3>
&lt;blockquote>
&lt;p>以Java编码的方式组织配置，包括Raw API和Bootstrap API，具体请参考&lt;a href="../api">API配置&lt;/a>。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">public&lt;/span> &lt;span style="color:#268bd2">static&lt;/span> &lt;span style="color:#dc322f">void&lt;/span> &lt;span style="color:#268bd2">main&lt;/span>(String&lt;span style="color:#719e07">[]&lt;/span> args) &lt;span style="color:#268bd2">throws&lt;/span> IOException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ServiceConfig&lt;span style="color:#719e07">&amp;lt;&lt;/span>GreetingsService&lt;span style="color:#719e07">&amp;gt;&lt;/span> service &lt;span style="color:#719e07">=&lt;/span> &lt;span style="color:#719e07">new&lt;/span> ServiceConfig&lt;span style="color:#719e07">&amp;lt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service.setApplication(&lt;span style="color:#719e07">new&lt;/span> ApplicationConfig(&lt;span style="color:#2aa198">&amp;#34;first-dubbo-provider&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service.setRegistry(&lt;span style="color:#719e07">new&lt;/span> RegistryConfig(&lt;span style="color:#2aa198">&amp;#34;multicast://224.5.6.7:1234&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service.setInterface(GreetingsService.class);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service.setRef(&lt;span style="color:#719e07">new&lt;/span> GreetingsServiceImpl());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service.export();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.out.println(&lt;span style="color:#2aa198">&amp;#34;first-dubbo-provider is running.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.in.read();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="xml-配置">XML 配置&lt;/h3>
&lt;blockquote>
&lt;p>以XML方式配置各种组件，支持与Spring无缝集成，具体请参考&lt;a href="../xml">XML配置&lt;/a>。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75">&amp;lt;!-- dubbo-provier.xml --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:application&lt;/span> name=&lt;span style="color:#2aa198">&amp;#34;demo-provider&amp;#34;&lt;/span>&lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:config-center&lt;/span> address=&lt;span style="color:#2aa198">&amp;#34;zookeeper://127.0.0.1:2181&amp;#34;&lt;/span>&lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:registry&lt;/span> address=&lt;span style="color:#2aa198">&amp;#34;zookeeper://127.0.0.1:2181&amp;#34;&lt;/span> simplified=&lt;span style="color:#2aa198">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:metadata-report&lt;/span> address=&lt;span style="color:#2aa198">&amp;#34;redis://127.0.0.1:6379&amp;#34;&lt;/span>&lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:protocol&lt;/span> name=&lt;span style="color:#2aa198">&amp;#34;dubbo&amp;#34;&lt;/span> port=&lt;span style="color:#2aa198">&amp;#34;20880&amp;#34;&lt;/span>&lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;bean&lt;/span> id=&lt;span style="color:#2aa198">&amp;#34;demoService&amp;#34;&lt;/span> class=&lt;span style="color:#2aa198">&amp;#34;org.apache.dubbo.samples.basic.impl.DemoServiceImpl&amp;#34;&lt;/span>&lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:service&lt;/span> interface=&lt;span style="color:#2aa198">&amp;#34;org.apache.dubbo.samples.basic.api.DemoService&amp;#34;&lt;/span> ref=&lt;span style="color:#2aa198">&amp;#34;demoService&amp;#34;&lt;/span>&lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="annotation-配置">Annotation 配置&lt;/h3>
&lt;blockquote>
&lt;p>以注解方式暴露服务和引用服务接口，支持与Spring无缝集成，具体请参考&lt;a href="../annotation">Annotation配置&lt;/a>。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75">// AnnotationService服务实现&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">@DubboService&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">public&lt;/span> &lt;span style="color:#268bd2">class&lt;/span> &lt;span style="color:#268bd2">AnnotationServiceImpl&lt;/span> &lt;span style="color:#268bd2">implements&lt;/span> AnnotationService {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">public&lt;/span> String &lt;span style="color:#268bd2">sayHello&lt;/span>(String name) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.out.println(&lt;span style="color:#2aa198">&amp;#34;async provider received: &amp;#34;&lt;/span> &lt;span style="color:#719e07">+&lt;/span> name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#719e07">return&lt;/span> &lt;span style="color:#2aa198">&amp;#34;annotation: hello, &amp;#34;&lt;/span> &lt;span style="color:#719e07">+&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75">## dubbo.properties&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.application.name&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">annotation-provider&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.registry.address&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">zookeeper://127.0.0.1:2181&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.protocol.name&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">dubbo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.protocol.port&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">20880&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="spring-boot-配置">Spring Boot 配置&lt;/h3>
&lt;blockquote>
&lt;p>使用 Spring Boot 减少非必要配置，结合 Annotation 与 application.properties/application.yml 开发 Dubbo 应用，具体请参考&lt;a href="../annotation">Annotation 配置&lt;/a>。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75">## application.properties&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># Spring boot application&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spring.application.name&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">dubbo-externalized-configuration-provider-sample&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># Base packages to scan Dubbo Component: @com.alibaba.dubbo.config.annotation.Service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.scan.base-packages&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">com.alibaba.boot.dubbo.demo.provider.service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># Dubbo Application&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75">## The default value of dubbo.application.name is ${spring.application.name}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75">## dubbo.application.name=${spring.application.name}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># Dubbo Protocol&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.protocol.name&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">dubbo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.protocol.port&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">12345&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75">## Dubbo Registry&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.registry.address&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">N/A&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75">## DemoService version&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>demo.service.version&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">1.0.0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="配置规范与来源">配置规范与来源&lt;/h2>
&lt;p>Dubbo 遵循一种 &lt;a href="../principle/">path-based 的配置规范&lt;/a>，每一个配置组件都可以通过这种方式进行表达。而在配置的来源上，总共支持 6 种配置来源，即 Dubbo 会分别尝试从以下几个位置尝试加载配置数据：&lt;/p>
&lt;ul>
&lt;li>JVM System Properties，JVM -D 参数&lt;/li>
&lt;li>System environment，JVM进程的环境变量&lt;/li>
&lt;li>Externalized Configuration，&lt;a href="../principle/#33-%E5%A4%96%E9%83%A8%E5%8C%96%E9%85%8D%E7%BD%AE">外部化配置&lt;/a>，从配置中心读取&lt;/li>
&lt;li>Application Configuration，应用的属性配置，从Spring应用的Environment中提取&amp;quot;dubbo&amp;quot;打头的属性集&lt;/li>
&lt;li>API / XML /注解等编程接口采集的配置可以被理解成配置来源的一种，是直接面向用户编程的配置采集方式&lt;/li>
&lt;li>从classpath读取配置文件 dubbo.properties&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;a href="https://github.com/apache/dubbo-spring-boot-project/tree/master/dubbo-spring-boot-samples">dubbo-spring-boot-samples&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75">## application.properties&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75"># Spring boot application&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> spring.application.name&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">dubbo-externalized-configuration-provider-sample&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75"># Base packages to scan Dubbo Component: @com.alibaba.dubbo.config.annotation.Service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dubbo.scan.base-packages&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">com.alibaba.boot.dubbo.demo.provider.service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75"># Dubbo Application&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75">## The default value of dubbo.application.name is ${spring.application.name}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75">## dubbo.application.name=${spring.application.name}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75"># Dubbo Protocol&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dubbo.protocol.name&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">dubbo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dubbo.protocol.port&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">12345&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75">## Dubbo Registry&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dubbo.registry.address&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">N/A&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75">## service default version&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dubbo.provider.version&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">1.0.0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接下来，我们就围绕这个示例，分别从配置格式、配置来源、加载流程三个方面对 Dubbo 配置的工作原理进行分析。&lt;/p>
&lt;h2 id="1-配置格式">1 配置格式&lt;/h2>
&lt;p>目前Dubbo支持的所有配置都是&lt;code>.properties&lt;/code>格式的，包括&lt;code>-D&lt;/code>、&lt;code>Externalized Configuration&lt;/code>等，&lt;code>.properties&lt;/code>中的所有配置项遵循一种&lt;code>path-based&lt;/code>的配置格式。&lt;/p>
&lt;p>在Spring应用中也可以将属性配置放到&lt;code>application.yml&lt;/code>中，其树层次结构的方式可读性更好一些。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># 应用级配置（无id）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.{config-type}.{config-item}&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">{config-item-value}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># 实例级配置（指定id或name）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.{config-type}s.{config-id}.{config-item}&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">{config-item-value}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.{config-type}s.{config-name}.{config-item}&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">{config-item-value}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># 服务接口配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.service.{interface-name}.{config-item}&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">{config-item-value}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.reference.{interface-name}.{config-item}&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">{config-item-value}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># 方法配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.service.{interface-name}.{method-name}.{config-item}&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">{config-item-value}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.reference.{interface-name}.{method-name}.{config-item}&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">{config-item-value}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># 方法argument配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.reference.{interface-name}.{method-name}.{argument-index}.{config-item}&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">{config-item-value}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="11-应用级配置无id">1.1 应用级配置（无id）&lt;/h3>
&lt;p>应用级配置的格式为：配置类型单数前缀，无id/name。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># 应用级配置（无id）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.{config-type}.{config-item}&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">{config-item-value}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>类似 &lt;code>application&lt;/code>、&lt;code>monitor&lt;/code>、&lt;code>metrics&lt;/code> 等都属于应用级别组件，因此仅允许配置单个实例；而 &lt;code>protocol&lt;/code>、&lt;code>registry&lt;/code> 等允许配置多个的组件，在仅需要进行单例配置时，可采用此节描述的格式。常见示例如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>dubbo.application.name&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">demo-provider&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.application.qos-enable&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.registry.address&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">zookeeper://127.0.0.1:2181&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.protocol.name&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">dubbo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.protocol.port&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">-1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="12-实例级配置指定id或name">1.2 实例级配置（指定id或name）&lt;/h3>
&lt;p>针对某个实例的属性配置需要指定id或者name，其前缀格式为：配置类型复数前缀 + id/name。适用于 &lt;code>protocol&lt;/code>、&lt;code>registry&lt;/code> 等支持多例配置的组件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># 实例级配置（指定id或name）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.{config-type}s.{config-id}.{config-item}&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">{config-item-value}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.{config-type}s.{config-name}.{config-item}&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">{config-item-value}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>如果不存在该id或者name的实例，则框架会基于这里列出来的属性创建配置组件实例。&lt;/li>
&lt;li>如果已存在相同id或name的实例，则框架会将这里的列出的属性作为已有实例配置的补充，详细请参考&lt;a href="../principle#32-%E5%B1%9E%E6%80%A7%E8%A6%86%E7%9B%96">属性覆盖&lt;/a>。&lt;/li>
&lt;li>具体的配置复数形式请参考&lt;a href="../principle#17-%E9%85%8D%E7%BD%AE%E9%A1%B9%E5%8D%95%E5%A4%8D%E6%95%B0%E5%AF%B9%E7%85%A7%E8%A1%A8">单复数配置对照表&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>配置示例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>dubbo.registries.unit1.address&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">zookeeper://127.0.0.1:2181&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.registries.unit2.address&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">zookeeper://127.0.0.1:2182&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.protocols.dubbo.name&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">dubbo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.protocols.dubbo.port&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">20880&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.protocols.hessian.name&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">hessian&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.protocols.hessian.port&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">8089&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="13-服务接口配置">1.3 服务接口配置&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>dubbo.service.org.apache.dubbo.samples.api.DemoService.timeout&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">5000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.reference.org.apache.dubbo.samples.api.DemoService.timeout&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">6000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="方法配置">方法配置&lt;/h3>
&lt;p>方法配置格式:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># 方法配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.service.{interface-name}.{method-name}.{config-item}&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">{config-item-value}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.reference.{interface-name}.{method-name}.{config-item}&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">{config-item-value}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># 方法argument配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.reference.{interface-name}.{method-name}.{argument-index}.{config-item}&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">{config-item-value}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>方法配置示例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>dubbo.reference.org.apache.dubbo.samples.api.DemoService.sayHello.timeout&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">7000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.reference.org.apache.dubbo.samples.api.DemoService.sayHello.oninvoke&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">notifyService.onInvoke&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.reference.org.apache.dubbo.samples.api.DemoService.sayHello.onreturn&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">notifyService.onReturn&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.reference.org.apache.dubbo.samples.api.DemoService.sayHello.onthrow&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">notifyService.onThrow&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.reference.org.apache.dubbo.samples.api.DemoService.sayHello.0.callback&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>等价于XML配置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">&amp;lt;dubbo:reference&lt;/span> interface=&lt;span style="color:#2aa198">&amp;#34;org.apache.dubbo.samples.api.DemoService&amp;#34;&lt;/span> &lt;span style="color:#268bd2">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:method&lt;/span> name=&lt;span style="color:#2aa198">&amp;#34;sayHello&amp;#34;&lt;/span> timeout=&lt;span style="color:#2aa198">&amp;#34;7000&amp;#34;&lt;/span> oninvoke=&lt;span style="color:#2aa198">&amp;#34;notifyService.onInvoke&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> onreturn=&lt;span style="color:#2aa198">&amp;#34;notifyService.onReturn&amp;#34;&lt;/span> onthrow=&lt;span style="color:#2aa198">&amp;#34;notifyService.onThrow&amp;#34;&lt;/span>&lt;span style="color:#268bd2">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:argument&lt;/span> index=&lt;span style="color:#2aa198">&amp;#34;0&amp;#34;&lt;/span> callback=&lt;span style="color:#2aa198">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;/dubbo:method&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">&amp;lt;/dubbo:reference&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="14-参数配置">1.4 参数配置&lt;/h3>
&lt;p>parameters参数为map对象，支持xxx.parameters=[{key:value},{key:value}]方式进行配置。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>dubbo.application.parameters&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">[{item1:value1},{item2:value2}]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.reference.org.apache.dubbo.samples.api.DemoService.parameters&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">[{item3:value3}]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="15-传输层配置">1.5 传输层配置&lt;/h3>
&lt;p>triple协议采用Http2做底层通信协议，允许使用者自定义Http2的&lt;a href="https://datatracker.ietf.org/doc/html/rfc7540#section-6.5.2">6个settings参数&lt;/a>&lt;/p>
&lt;p>配置格式如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># 通知对端header压缩索引表的上限个数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.rpc.tri.header-table-size&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">4096&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># 启用服务端推送功能&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.rpc.tri.enable-push&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># 通知对端允许的最大并发流数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.rpc.tri.max-concurrent-streams&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">2147483647&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># 声明发送端的窗口大小&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.rpc.tri.initial-window-size&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">1048576&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># 设置帧的最大字节数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.rpc.tri.max-frame-size&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">32768&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># 通知对端header未压缩的最大字节数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.rpc.tri.max-header-list-size&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">8192&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>等价于yml配置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">dubbo&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">rpc&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">tri&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">header-table-size&lt;/span>: &lt;span style="color:#2aa198">4096&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">enable-push&lt;/span>: &lt;span style="color:#cb4b16">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">max-concurrent-streams&lt;/span>: &lt;span style="color:#2aa198">2147483647&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">initial-window-size&lt;/span>: &lt;span style="color:#2aa198">1048576&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">max-frame-size&lt;/span>: &lt;span style="color:#2aa198">32768&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">max-header-list-size&lt;/span>: &lt;span style="color:#2aa198">8192&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="16-属性与xml配置映射规则">1.6 属性与XML配置映射规则&lt;/h3>
&lt;p>可以将 xml 的 tag 名和属性名组合起来，用 ‘.’ 分隔。每行一个属性。&lt;/p>
&lt;ul>
&lt;li>&lt;code>dubbo.application.name=foo&lt;/code> 相当于 &lt;code>&amp;lt;dubbo:application name=&amp;quot;foo&amp;quot; /&amp;gt;&lt;/code>&lt;/li>
&lt;li>&lt;code>dubbo.registry.address=10.20.153.10:9090&lt;/code> 相当于 &lt;code>&amp;lt;dubbo:registry address=&amp;quot;10.20.153.10:9090&amp;quot; /&amp;gt; &lt;/code>&lt;/li>
&lt;/ul>
&lt;p>如果在 xml 配置中有超过一个的 tag，那么你可以使用 ‘id’ 进行区分。如果你不指定id，它将作用于所有 tag。&lt;/p>
&lt;ul>
&lt;li>&lt;code>dubbo.protocols.rmi.port=1099&lt;/code> 相当于 &lt;code>&amp;lt;dubbo:protocol id=&amp;quot;rmi&amp;quot; name=&amp;quot;rmi&amp;quot; port=&amp;quot;1099&amp;quot; /&amp;gt; &lt;/code>&lt;/li>
&lt;li>&lt;code>dubbo.registries.china.address=10.20.153.10:9090&lt;/code> 相当于 &lt;code>&amp;lt;dubbo:registry id=&amp;quot;china&amp;quot; address=&amp;quot;10.20.153.10:9090&amp;quot; /&amp;gt;&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="17-配置项单复数对照表">1.7 配置项单复数对照表&lt;/h3>
&lt;p>复数配置的命名与普通单词变复数的规则相同：&lt;/p>
&lt;ol>
&lt;li>字母y结尾时，去掉y，改为ies&lt;/li>
&lt;li>字母s结尾时，加es&lt;/li>
&lt;li>其它加s&lt;/li>
&lt;/ol>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Config Type&lt;/th>
&lt;th>单数配置&lt;/th>
&lt;th>复数配置&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>application&lt;/td>
&lt;td>dubbo.application.xxx=xxx&lt;/td>
&lt;td>dubbo.applications.{id}.xxx=xxx &lt;br/> dubbo.applications.{name}.xxx=xxx&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>protocol&lt;/td>
&lt;td>dubbo.protocol.xxx=xxx&lt;/td>
&lt;td>dubbo.protocols.{id}.xxx=xxx &lt;br/> dubbo.protocols.{name}.xxx=xxx&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>module&lt;/td>
&lt;td>dubbo.module.xxx=xxx&lt;/td>
&lt;td>dubbo.modules.{id}.xxx=xxx &lt;br/> dubbo.modules.{name}.xxx=xxx&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>registry&lt;/td>
&lt;td>dubbo.registry.xxx=xxx&lt;/td>
&lt;td>dubbo.registries.{id}.xxx=xxx&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>monitor&lt;/td>
&lt;td>dubbo.monitor.xxx=xxx&lt;/td>
&lt;td>dubbo.monitors.{id}.xxx=xxx&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>config-center&lt;/td>
&lt;td>dubbo.config-center.xxx=xxx&lt;/td>
&lt;td>dubbo.config-centers.{id}.xxx=xxx&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>metadata-report&lt;/td>
&lt;td>dubbo.metadata-report.xxx=xxx&lt;/td>
&lt;td>dubbo.metadata-reports.{id}.xxx=xxx&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ssl&lt;/td>
&lt;td>dubbo.ssl.xxx=xxx&lt;/td>
&lt;td>dubbo.ssls.{id}.xxx=xxx&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>metrics&lt;/td>
&lt;td>dubbo.metrics.xxx=xxx&lt;/td>
&lt;td>dubbo.metricses.{id}.xxx=xxx&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider&lt;/td>
&lt;td>dubbo.provider.xxx=xxx&lt;/td>
&lt;td>dubbo.providers.{id}.xxx=xxx&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>consumer&lt;/td>
&lt;td>dubbo.consumer.xxx=xxx&lt;/td>
&lt;td>dubbo.consumers.{id}.xxx=xxx&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>service&lt;/td>
&lt;td>dubbo.service.{interfaceName}.xxx=xxx&lt;/td>
&lt;td>无&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>reference&lt;/td>
&lt;td>dubbo.reference.{interfaceName}.xxx=xxx&lt;/td>
&lt;td>无&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>method&lt;/td>
&lt;td>dubbo.service.{interfaceName}.{methodName}.xxx=xxx &lt;br/> dubbo.reference.{interfaceName}.{methodName}.xxx=xxx&lt;/td>
&lt;td>无&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>argument&lt;/td>
&lt;td>dubbo.service.{interfaceName}.{methodName}.{arg-index}.xxx=xxx&lt;/td>
&lt;td>无&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="2-配置来源">2 配置来源&lt;/h2>
&lt;p>Dubbo 默认支持 6 种配置来源：&lt;/p>
&lt;ul>
&lt;li>JVM System Properties，JVM -D 参数&lt;/li>
&lt;li>System environment，JVM进程的环境变量&lt;/li>
&lt;li>Externalized Configuration，&lt;a href="#33-%E5%A4%96%E9%83%A8%E5%8C%96%E9%85%8D%E7%BD%AE">外部化配置&lt;/a>，从配置中心读取&lt;/li>
&lt;li>Application Configuration，应用的属性配置，从Spring应用的Environment中提取&amp;quot;dubbo&amp;quot;打头的属性集&lt;/li>
&lt;li>API / XML /注解等编程接口采集的配置可以被理解成配置来源的一种，是直接面向用户编程的配置采集方式&lt;/li>
&lt;li>从classpath读取配置文件 dubbo.properties&lt;/li>
&lt;/ul>
&lt;p>关于dubbo.properties属性：&lt;/p>
&lt;ol>
&lt;li>如果在 classpath 下有超过一个 dubbo.properties 文件，比如，两个 jar 包都各自包含了 dubbo.properties，dubbo 将随机选择一个加载，并且打印错误日志。&lt;/li>
&lt;li>Dubbo 可以自动加载 classpath 根目录下的 dubbo.properties，但是你同样可以使用 JVM 参数来指定路径：&lt;code>-Ddubbo.properties.file=xxx.properties&lt;/code>。&lt;/li>
&lt;/ol>
&lt;h3 id="21-覆盖关系">2.1 覆盖关系&lt;/h3>
&lt;p>如果通过多种配置来源指定了相同的配置项，则会出现配置项的互相覆盖，具体覆盖关系和优先级请参考下一小节。&lt;/p>
&lt;h2 id="3-配置加载流程">3 配置加载流程&lt;/h2>
&lt;h3 id="31-处理流程">3.1 处理流程&lt;/h3>
&lt;p>Dubbo 配置加载大概分为两个阶段：&lt;/p>
&lt;p>&lt;img src="https://dubbo.apache.org/imgs/v3/config/config-load.svg" alt="配置加载流程">&lt;/p>
&lt;ul>
&lt;li>第一阶段为DubboBootstrap初始化之前，在Spring context启动时解析处理XML配置/注解配置/Java-config 或者是执行API配置代码，创建config bean并且加入到ConfigManager中。&lt;/li>
&lt;li>第二阶段为DubboBootstrap初始化过程，从配置中心读取外部配置，依次处理实例级属性配置和应用级属性配置，最后刷新所有配置实例的属性，也就是&lt;a href="../principle#32-%E5%B1%9E%E6%80%A7%E8%A6%86%E7%9B%96">属性覆盖&lt;/a>。&lt;/li>
&lt;/ul>
&lt;h3 id="32-属性覆盖">3.2 属性覆盖&lt;/h3>
&lt;p>发生属性覆盖可能有两种情况，并且二者可能是会同时发生的：&lt;/p>
&lt;ol>
&lt;li>不同配置源配置了相同的配置项&lt;/li>
&lt;li>相同配置源，但在不同层次指定了相同的配置项&lt;/li>
&lt;/ol>
&lt;h4 id="321-不同配置源">3.2.1 不同配置源&lt;/h4>
&lt;p>&lt;img src="https://dubbo.apache.org/imgs/blog/configuration.jpg" alt="覆盖关系">&lt;/p>
&lt;h4 id="321-相同配置源">3.2.1 相同配置源&lt;/h4>
&lt;p>属性覆盖是指用配置的属性值覆盖config bean实例的属性，类似Spring &lt;a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/config/PropertyOverrideConfigurer.html">PropertyOverrideConfigurer&lt;/a> 的作用。&lt;/p>
&lt;blockquote>
&lt;p>Property resource configurer that overrides bean property values in an application context definition. It pushes values from a properties file into bean definitions.
Configuration lines are expected to be of the following form:&lt;/p>
&lt;p>beanName.property=value&lt;/p>
&lt;/blockquote>
&lt;p>但与&lt;code>PropertyOverrideConfigurer&lt;/code>的不同之处是，Dubbo的属性覆盖有多个匹配格式，优先级从高到低依次是：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75">#1. 指定id的实例级配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.{config-type}s.{config-id}.{config-item}&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">{config-item-value}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75">#2. 指定name的实例级配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.{config-type}s.{config-name}.{config-item}&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">{config-item-value}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75">#3. 应用级配置（单数配置）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.{config-type}.{config-item}&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">{config-item-value}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>属性覆盖处理流程：&lt;/p>
&lt;p>按照优先级从高到低依次查找，如果找到此前缀开头的属性，则选定使用这个前缀提取属性，忽略后面的配置。&lt;/p>
&lt;p>&lt;img src="https://dubbo.apache.org/imgs/v3/config/properties-override.svg" alt="属性覆盖流程">&lt;/p>
&lt;h3 id="33-外部化配置">3.3 外部化配置&lt;/h3>
&lt;p>外部化配置目的之一是实现配置的集中式管理，这部分业界已经有很多成熟的专业配置系统如 Apollo, Nacos 等，Dubbo 所做的主要是保证能配合这些系统正常工作。&lt;/p>
&lt;p>外部化配置和其他本地配置在内容和格式上并无区别，可以简单理解为 &lt;code>dubbo.properties&lt;/code> 的外部化存储，配置中心更适合将一些公共配置如注册中心、元数据中心配置等抽取以便做集中管理。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># 将注册中心地址、元数据中心地址等配置集中管理，可以做到统一环境、减少开发侧感知。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.registry.address&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">zookeeper://127.0.0.1:2181&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.registry.simplified&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.metadata-report.address&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">zookeeper://127.0.0.1:2181&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.protocol.name&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">dubbo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.protocol.port&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">20880&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubbo.application.qos.port&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">33333&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>优先级
外部化配置默认较本地配置有更高的优先级，因此这里配置的内容会覆盖本地配置值，关于各配置形式间的&lt;a href="#21-%E8%A6%86%E7%9B%96%E5%85%B3%E7%B3%BB">覆盖关系&lt;/a> 有单独一章说明。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>作用域
外部化配置有全局和应用两个级别，全局配置是所有应用共享的，应用级配置是由每个应用自己维护且只对自身可见的。当前已支持的扩展实现有 Zookeeper、Apollo、Nacos。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="331-外部化配置使用方式">3.3.1 外部化配置使用方式&lt;/h4>
&lt;ol>
&lt;li>增加 config-center 配置&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">&amp;lt;dubbo:config-center&lt;/span> address=&lt;span style="color:#2aa198">&amp;#34;zookeeper://127.0.0.1:2181&amp;#34;&lt;/span>&lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>在相应的配置中心（zookeeper、Nacos 等）增加全局配置项，如下以 Nacos 为例：&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://dubbo.apache.org/imgs/v3/config-center/nacos-extenal-properties.png" alt="nacos-extenal-properties">&lt;/p>
&lt;p>开启外部化配置后，registry、metadata-report、protocol、qos 等全局范围的配置理论上都不再需要在应用中配置，应用开发侧专注业务服务配置，一些全局共享的全局配置转而由运维人员统一配置在远端配置中心。&lt;/p>
&lt;p>这样能做到的效果就是，应用只需要关心：&lt;/p>
&lt;ul>
&lt;li>服务暴露、订阅配置&lt;/li>
&lt;li>配置中心地址
当部署到不同的环境时，其他配置就能自动的被从对应的配置中心读取到。&lt;/li>
&lt;/ul>
&lt;p>举例来说，每个应用中 Dubbo 相关的配置只有以下内容可能就足够了，其余的都托管给相应环境下的配置中心：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>dubbo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> application
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">name&lt;/span>: demo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> config-center
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">address&lt;/span>: nacos://127.0.0.1:8848
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="332-自行加载外部化配置">3.3.2 自行加载外部化配置&lt;/h4>
&lt;p>所谓 Dubbo 对配置中心的支持，本质上就是把 &lt;code>.properties&lt;/code> 从远程拉取到本地，然后和本地的配置做一次融合。理论上只要 Dubbo 框架能拿到需要的配置就可以正常的启动，它并不关心这些配置是自己加载到的还是应用直接塞给它的，所以Dubbo还提供了以下API，让用户将自己组织好的配置塞给 Dubbo 框架（配置加载的过程是用户要完成的），这样 Dubbo 框架就不再直接和 Apollo 或 Zookeeper 做读取配置交互。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75">// 应用自行加载配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Map&lt;span style="color:#719e07">&amp;lt;&lt;/span>String, String&lt;span style="color:#719e07">&amp;gt;&lt;/span> dubboConfigurations &lt;span style="color:#719e07">=&lt;/span> &lt;span style="color:#719e07">new&lt;/span> HashMap&lt;span style="color:#719e07">&amp;lt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubboConfigurations.put(&lt;span style="color:#2aa198">&amp;#34;dubbo.registry.address&amp;#34;&lt;/span>, &lt;span style="color:#2aa198">&amp;#34;zookeeper://127.0.0.1:2181&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dubboConfigurations.put(&lt;span style="color:#2aa198">&amp;#34;dubbo.registry.simplified&amp;#34;&lt;/span>, &lt;span style="color:#2aa198">&amp;#34;true&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75">//将组织好的配置塞给Dubbo框架&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ConfigCenterConfig configCenter &lt;span style="color:#719e07">=&lt;/span> &lt;span style="color:#719e07">new&lt;/span> ConfigCenterConfig();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>configCenter.setExternalConfig(dubboConfigurations);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Overview: 配置项参考手册</title><link>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/config/properties/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/config/properties/</guid><description>
&lt;h2 id="jvm-d-参数">JVM(-D) 参数&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>JVM 参数&lt;/th>
&lt;th>示例值&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>dubbo.{config-name}.{property}&lt;/td>
&lt;td>-Ddubbo.application.name=&amp;ldquo;dubbo-demo&amp;rdquo;&lt;br/>&lt;br/>-Ddubbo.registry.address=&amp;ldquo;nacos://host:port&amp;rdquo;&lt;br/>&lt;br/>-Ddubbo.protocol.port=&amp;ldquo;20880&amp;rdquo;&lt;br/>&lt;br/>&amp;hellip;&amp;hellip;&lt;/td>
&lt;td>Dubbo支持 &lt;a href="aaa">所有的配置项&lt;/a> 以JVM参数格式指定。其中&lt;code>config&lt;/code> 是指如 application、registry、protocol 等配置项，而&lt;code>property&lt;/code>则是指每个配置项中的具体属性。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.resolve.file&lt;/td>
&lt;td>-Ddubbo.resolve.file=/home/ken/&amp;hellip;/dubbo-resolve.properties&lt;/td>
&lt;td>在文件中指定每个接口的直连地址url，如：org.apache.dubbo.demo.DemoService=tri://127.0.0.1:50051/org.apache.dubbo.demo.DemoService?xxx=xxx&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>org.graalvm.nativeimage.imagecode&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;a href="https://github.com/oracle/graal/blob/master/sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/ImageInfo.java">https://github.com/oracle/graal/blob/master/sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/ImageInfo.java&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.properties.file&lt;/td>
&lt;td>-Ddubbo.properties.file=foo.properties&lt;/td>
&lt;td>指定 properties 配置文件地址，可以是绝对路径或者classpath相对路径。默认值为 dubbo.properties&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.jstack-dump.max-line&lt;/td>
&lt;td>-Ddubbo.jstack-dump.max-line=20&lt;/td>
&lt;td>Dubbo 支持自动打印调用堆栈，这个参数可以控制堆栈行数，如示例中只会打印前20行堆栈&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.json-framework.prefer&lt;/td>
&lt;td>-Ddubbo.json-framework.prefer=gson&lt;/td>
&lt;td>设置框架中 json 序列化的具体实现，目前可选实现有 &lt;code>fastjson2&lt;/code>、&lt;code>fastjson&lt;/code>、&lt;code>gson&lt;/code>、&lt;code>jackson&lt;/code>。默认情况，框架会自动查找可用实现，以上按顺序优先级依次降低&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.network.interface.ignored&lt;/td>
&lt;td>-Ddubbo.network.interface.ignored=eth1,eth2&lt;/td>
&lt;td>在多网卡环境下，当需要手动控制注册到注册中心的网卡地址时使用。用于排除某些网卡&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.network.interface.preferred&lt;/td>
&lt;td>-Ddubbo.network.interface.ignored=eth0&lt;/td>
&lt;td>在多网卡环境下，当需要手动控制注册到注册中心的网卡地址时使用。用于指定一个特定网卡&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>sun.rmi.transport.tcp.responseTimeout&lt;/td>
&lt;td>-Dsun.rmi.transport.tcp.responseTimeout=5000&lt;/td>
&lt;td>用于设置 RMI 协议下的超时时间，单位ms&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>env&lt;/td>
&lt;td>&lt;/td>
&lt;td>Apollo 配置中心特有参数&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>app.id&lt;/td>
&lt;td>&lt;/td>
&lt;td>Apollo 配置中心特有参数&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>apollo.cluster&lt;/td>
&lt;td>&lt;/td>
&lt;td>Apollo 配置中心特有参数&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>apollo.meta&lt;/td>
&lt;td>&lt;/td>
&lt;td>Apollo 配置中心特有参数&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.mapping.cache.filePath&lt;/td>
&lt;td>-Ddubbo.mapping.cache.filePath=~/.dubbo/mapping/&lt;/td>
&lt;td>用于设置&lt;code>接口-应用&lt;/code>映射关系缓存文件，通常用于服务发现。文件绝对路径地址&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.mapping.cache.fileName&lt;/td>
&lt;td>-Ddubbo.mapping.cache.fileName=dubbo-mapping&lt;/td>
&lt;td>用于设置&lt;code>接口-应用&lt;/code>映射关系缓存文件，通常用于服务发现。文件名，如此示例最终会读取和存储在文件 dubbo-mapping.dubbo.cache&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.mapping.cache.entrySize&lt;/td>
&lt;td>-Ddubbo.mapping.cache.maxFileSize=300&lt;/td>
&lt;td>用于设置&lt;code>接口-应用&lt;/code>映射关系缓存文件，通常用于服务发现。文件名中内容最大条目数限制&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.mapping.cache.maxFileSize&lt;/td>
&lt;td>-Ddubbo.mapping.cache.maxFileSize=104857600&lt;/td>
&lt;td>用于设置&lt;code>接口-应用&lt;/code>映射关系缓存文件，通常用于服务发现。文件最大占用空间限制，单位byte&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.meta.cache.filePath&lt;/td>
&lt;td>-Ddubbo.meta.cache.filePath=~/.dubbo/meta/&lt;/td>
&lt;td>用于设置&lt;code>metadata元数据&lt;/code>缓存文件，通常用于服务发现。文件绝对路径地址&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.meta.cache.fileName&lt;/td>
&lt;td>-Ddubbo.meta.cache.fileName=dubbo-meta&lt;/td>
&lt;td>用于设置&lt;code>metadata元数据&lt;/code>缓存文件，通常用于服务发现。文件名，如此示例最终会读取和存储在文件 dubbo-meta.dubbo.cache&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.meta.cache.entrySize&lt;/td>
&lt;td>-Ddubbo.meta.cache.maxFileSize=300&lt;/td>
&lt;td>用于设置&lt;code>metadata元数据&lt;/code>缓存文件，通常用于服务发现。文件名中内容最大条目数限制&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.meta.cache.maxFileSize&lt;/td>
&lt;td>-Ddubbo.meta.cache.maxFileSize=104857600&lt;/td>
&lt;td>用于设置&lt;code>metadata元数据&lt;/code>缓存文件，通常用于服务发现。文件最大占用空间限制，单位byte&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.application.use-secure-random-request-id&lt;/td>
&lt;td>-Ddubbo.application.use-secure-random-request-id=true&lt;/td>
&lt;td>设置每次 rpc 调用 request id 的生成规则，是不是用随机值。如不设置则使用递增值。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.protocol.default-close-timeout&lt;/td>
&lt;td>-Ddubbo.protocol.default-close-timeout=10000&lt;/td>
&lt;td>设置 tcp server 关闭等待时间，单位毫秒ms&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.protocol.default-heartbeat&lt;/td>
&lt;td>-Ddubbo.protocol.default-heartbeat=10000&lt;/td>
&lt;td>设置发起心跳 heartbeat 的间隔，单位毫秒ms&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.hessian.allowNonSerializable&lt;/td>
&lt;td>&lt;/td>
&lt;td>是否允许对没有实现 Serializable 接口的类进行序列化，对hessian序列化有效&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.application.hessian2.whitelist&lt;/td>
&lt;td>-Ddubbo.application.hessian2.whitelist=true&lt;/td>
&lt;td>设置是否启用白名单机制，对hessian序列化有效。如果设置 true，则继续配置下面的 allow 规则；否则，配置 deny 规则&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.application.hessian2.allow&lt;/td>
&lt;td>-Ddubbo.application.hessian2.allow=org.apache.dubbo.&lt;em>;com.company.&lt;/em>&lt;/td>
&lt;td>如果设置 true，则继续配置配置 allow 规则，参见文档说明&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.application.hessian2.deny&lt;/td>
&lt;td>-Ddubbo.application.hessian2.deny=org.apache.dubbo.&lt;em>;io.commons.&lt;/em>&lt;/td>
&lt;td>如果设置 false，则继续配置配置 deny 规则，参见文档说明&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.application.manual-register&lt;/td>
&lt;td>-Ddubbo.application.manual-register=true&lt;/td>
&lt;td>设置之后，所有服务都不会被自动注册到注册中心，直到用户调用 online 等命令手动完成注册&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.compact.enable&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.migration-file.enable&lt;/td>
&lt;td>-Ddubbo.migration-file.enable=true&lt;/td>
&lt;td>在往应用级地址发现迁移时，是否启用规则文件读取&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.migration.file&lt;/td>
&lt;td>-Ddubbo.migration.file=dubbo-migration.yaml&lt;/td>
&lt;td>指定往应用级地址发现迁移的规则文件路径，可以是绝对路径或者classpath相对路径。默认值为 dubbo-migration.yaml&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.application.logger&lt;/td>
&lt;td>-Ddubbo.application.logger=slf4j&lt;/td>
&lt;td>设置dubbo框架使用的日志组件，设置后，dubbo框架自身的日志将打印到这里（不影响应用自身）；目前支持的 slf4j、log4j、log4j2 等，设置之后须确保相应的组件依赖已经加入应用。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.properties.file&lt;/td>
&lt;td>-Ddubbo.properties.file=foo.properties&lt;/td>
&lt;td>指定 properties 配置文件地址，可以是绝对路径或者classpath相对路径。默认值为 dubbo.properties&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="环境变量">环境变量&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>环境变量&lt;/th>
&lt;th>示例值&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>DUBBO_{CONFIG-NAME}.{PROPERTY}&lt;/td>
&lt;td>DUBBO_APPLICATION_NAME=&amp;ldquo;dubbo-demo&amp;rdquo;&lt;br/>&lt;br/>DUBBO_REGISTRY_ADDRESS=&amp;ldquo;nacos://host:port&amp;rdquo;&lt;br/>&lt;br/>DUBBO_PROTOCOL_PORT=&amp;ldquo;20880&amp;rdquo;&lt;br/>&lt;br/>&amp;hellip;&amp;hellip;&lt;/td>
&lt;td>Dubbo支持&lt;a href="aaa">所有的配置项&lt;/a>以环境变量格式指定。其中&lt;code>CONFIG-NAME&lt;/code> 是指如 application、registry、protocol 等配置项，而 &lt;code>PROPERTY&lt;/code>则是指每个配置项中的具体属性。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DUBBO_DEFAULT_SERIALIZATION&lt;/td>
&lt;td>DUBBO_DEFAULT_SERIALIZATION=&amp;ldquo;hessan2&amp;rdquo;&lt;/td>
&lt;td>设置框架的默认序列化方式，如hessian2、fastjson2、msgpack等&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DUBBO2_COMPACT_ENABLE&lt;/td>
&lt;td>DUBBO2_COMPAT_ENABLE=&amp;ldquo;true&amp;rdquo;&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DUBBO_ENV_KEYS&lt;/td>
&lt;td>DUBBO_LABELS=&amp;ldquo;tag1=value1; tag2=value2&amp;rdquo;&lt;/td>
&lt;td>&lt;code>tag1=value1&lt;/code>会作为附加参数上报到地址 URL，作为系统环境变量可用于为实例打标等。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DUBBO_LABELS&lt;/td>
&lt;td>DUBBO_ENV_KEYS=&amp;ldquo;DUBBO_TAG1, DUBBO_TAG2&amp;rdquo;&lt;/td>
&lt;td>Dubbo 会读取 &lt;code>DUBBO_TAG1&lt;/code>、&lt;code>DUBBO_TAG2&lt;/code>两个环境变量，并将读取的值 value &lt;code>DUBBO_TAG1=value&lt;/code> 作为附加参数上报到地址 URL。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>POD_NAMESPACE&lt;/td>
&lt;td>&lt;/td>
&lt;td>用于 Kubernetes Service 场景，指定命名空间&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CLUSTER_DOMAIN&lt;/td>
&lt;td>&lt;/td>
&lt;td>用于 Kubernetes Service 场景，指定集群名称，默认 default&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DUBBO_IP_TO_REGISTRY&lt;/td>
&lt;td>DUBBO_IP_TO_REGISTRY=30.123.45.187&lt;/td>
&lt;td>指定注册到注册中心 URL 中的 ip 地址&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DUBBO_PORT_TO_REGISTRY&lt;/td>
&lt;td>DUBBO_PORT_TO_REGISTRY=20880&lt;/td>
&lt;td>指定注册到注册中心 URL 中的 port 端口号&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DUBBO_{PROTOCOL}_PORT_TO_REGISTRY&lt;/td>
&lt;td>DUBBO_DUBBO_IP_TO_REGISTRY=30.123.45.187&lt;br/>&lt;br/>DUBBO_TRI_IP_TO_REGISTRY=30.123.45.187&lt;/td>
&lt;td>指定注册到注册中心 URL 中的 ip 地址，可以为不同协议指定不同 ip&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DUBBO_{PROTOCOL}_PORT_TO_REGISTRY&lt;/td>
&lt;td>DUBBO_DUBBO_PORT_TO_REGISTRY=20880&lt;br/>&lt;br/>DUBBO_TRI_PORT_TO_REGISTRY=50051&lt;/td>
&lt;td>指定注册到注册中心 URL 中的 port 端口，可以为不同协议指定不同 port&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DUBBO_IP_TO_BIND&lt;/td>
&lt;td>DUBBO_IP_TO_BIND=30.123.45.187&lt;/td>
&lt;td>指定 tcp 监听绑定的 ip 地址&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DUBBO_PORT_TO_BIND&lt;/td>
&lt;td>DUBBO_PORT_TO_BIND=20880&lt;/td>
&lt;td>指定 tcp 监听绑定的 port 端口&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DUBBO_{PROTOCOL}_IP_TO_BIND&lt;/td>
&lt;td>DUBBO_DUBBO_IP_TO_BIND=30.123.45.187&lt;br/>&lt;br/>DUBBO_TRI_IP_TO_BIND=30.123.45.187&lt;/td>
&lt;td>指定 tcp 监听绑定的 ip 地址，可以为不同协议指定不同 ip&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DUBBO_{PROTOCOL}_PORT_TO_BIND&lt;/td>
&lt;td>DUBBO_DUBBO_PORT_TO_BIND=20880&lt;br/>&lt;br/>DUBBO_TRI_PORT_TO_BIND=50051&lt;/td>
&lt;td>指定 tcp 监听绑定的 port 端口，可以为不同协议指定不同 port&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.properties.file&lt;/td>
&lt;td>dubbo.properties.file=foo.properties&lt;/td>
&lt;td>指定 properties 配置文件地址，可以是绝对路径或者classpath相对路径。默认值为 dubbo.properties&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.migration.file&lt;/td>
&lt;td>dubbo.migration.file=dubbo-migration.yaml&lt;/td>
&lt;td>指定应用级地址发现的迁移规则的文件地址，可以是绝对路径或者classpath相对路径。默认值为 dubbo-migration.yaml&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="配置项手册">配置项手册&lt;/h2>
&lt;p>不论您是使用 Spring Boot、XML、注解还是 API 编写 Dubbo 应用，都可以通过以下表格参考每一项的具体含义。&lt;/p>
&lt;h3 id="dubbotracingbaggagecorrelation">dubbo.tracing.baggage.correlation&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.nested.BaggageConfig$Correlation&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>enabled&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to enable correlation of the baggage context with logging contexts.&lt;/td>
&lt;td>true&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>fields&lt;/td>
&lt;td>java.util.List&amp;lt;java.lang.String&amp;gt;&lt;/td>
&lt;td>List of fields that should be correlated with the logging context. That means that these fields would end up as key-value pairs in e.g. MDC.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubbotracingtracing-exporterotlp-config">dubbo.tracing.tracing-exporter.otlp-config&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.nested.ExporterConfig$OtlpConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>compression-method&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The method used to compress payloads. If unset, compression is disabled. Currently supported compression methods include &amp;quot;gzip&amp;quot; and &amp;quot;none&amp;quot;.&lt;/td>
&lt;td>none&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>endpoint&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>URL to the Otlp API.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>headers&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>timeout&lt;/td>
&lt;td>java.time.Duration&lt;/td>
&lt;td>The maximum time to wait for the collector to process an exported batch of spans. (seconds)&lt;/td>
&lt;td>10&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubbotracingtracing-exporterzipkin-config">dubbo.tracing.tracing-exporter.zipkin-config&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.nested.ExporterConfig$ZipkinConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>connect-timeout&lt;/td>
&lt;td>java.time.Duration&lt;/td>
&lt;td>Connection timeout for requests to Zipkin. (seconds)&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>endpoint&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>URL to the Zipkin API.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>read-timeout&lt;/td>
&lt;td>java.time.Duration&lt;/td>
&lt;td>Read timeout for requests to Zipkin. (seconds)&lt;/td>
&lt;td>10&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubbometricsprometheusexporter">dubbo.metrics.prometheus.exporter&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.nested.PrometheusConfig$Exporter&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>enable-http-service-discovery&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Enable http service discovery for prometheus&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enabled&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Enable prometheus exporter&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>http-service-discovery-url&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Http service discovery url&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubbometricsprometheuspushgateway">dubbo.metrics.prometheus.pushgateway&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.nested.PrometheusConfig$Pushgateway&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>base-url&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Base URL for the Pushgateway&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enabled&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Enable publishing via a Prometheus Pushgateway&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>job&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Job identifier for this application instance&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>password&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Login password of the Prometheus Pushgateway&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>push-interval&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Frequency with which to push metrics&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>username&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Login user of the Prometheus Pushgateway&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="unknown-group">Unknown group&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>Unknown&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>dubbo.config-center.include-spring-env&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to include Spring Environment.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.config.mode&lt;/td>
&lt;td>org.apache.dubbo.config.context.ConfigMode&lt;/td>
&lt;td>Config processing mode. See &amp;lt;code&amp;gt;org.apache.dubbo.config.context.ConfigMode&amp;lt;/code&amp;gt;.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.config.multiple&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to enable multiple configurations in Dubbo, allowing multiple configurations to be loaded and used, default value is &amp;lt;code&amp;gt;true&amp;lt;/code&amp;gt;.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.config.override&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to allow configuration override in Dubbo, default value is &amp;lt;code&amp;gt;true&amp;lt;/code&amp;gt;.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.enabled&lt;/td>
&lt;td>java.util.Set&amp;lt;java.lang.String&amp;gt;&lt;/td>
&lt;td>Whether enable autoconfiguration of dubbo, default value is &amp;lt;code&amp;gt;true&amp;lt;/code&amp;gt;.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.env.keys&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The keys for specify environment-specific keys, allowing for differentiation and utilization of various runtime environments (e.g., development, testing, production), the multiple-value is delimited by comma.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.labels&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The labels for these service providers, enabling categorization and grouping, thereby enhancing their management and monitoring, the multiple-value is delimited by ';'.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dubbo.scan.base-packages&lt;/td>
&lt;td>java.util.Set&amp;lt;java.lang.String&amp;gt;&lt;/td>
&lt;td>The basePackages to scan, the multiple-value is delimited by comma @see EnableDubbo#scanBasePackages().&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubbotracingbaggage">dubbo.tracing.baggage&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.nested.BaggageConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>enabled&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether baggage is enabled or not.&lt;/td>
&lt;td>true&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>remote-fields&lt;/td>
&lt;td>java.util.List&amp;lt;java.lang.String&amp;gt;&lt;/td>
&lt;td>List of fields that are referenced the same in-process as it is on the wire. For example, the field &amp;quot;x-vcap-request-id&amp;quot; would be set as-is including the prefix.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubbotracingpropagation">dubbo.tracing.propagation&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.nested.PropagationConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>type&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Tracing context propagation type.&lt;/td>
&lt;td>W3C&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubbotracingsampling">dubbo.tracing.sampling&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.nested.SamplingConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>probability&lt;/td>
&lt;td>java.lang.Float&lt;/td>
&lt;td>Probability in the range from 0.0 to 1.0 that a trace will be sampled.&lt;/td>
&lt;td>0.1&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubbotracingtracing-exporter">dubbo.tracing.tracing-exporter&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.nested.ExporterConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table>
&lt;h3 id="dubborpctri">dubbo.rpc.tri&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.TripleConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>enable-push&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to enable push, default is false.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>header-table-size&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The header table size.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>initial-window-size&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Initial window size.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>max-concurrent-streams&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Maximum concurrent streams.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>max-frame-size&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Maximum frame size.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>max-header-list-size&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Maximum header list size.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubbo">dubbo&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.spring.boot.autoconfigure.DubboConfigurationProperties&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>config-centers&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,org.apache.dubbo.config.ConfigCenterConfig&amp;gt;&lt;/td>
&lt;td>Multiple configurations for ConfigCenterBean.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>consumers&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,org.apache.dubbo.config.ConsumerConfig&amp;gt;&lt;/td>
&lt;td>Multiple configurations for Consumer.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>metadata-reports&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,org.apache.dubbo.config.MetadataReportConfig&amp;gt;&lt;/td>
&lt;td>Multiple configurations for MetadataReportConfig.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>metricses&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,org.apache.dubbo.config.MetricsConfig&amp;gt;&lt;/td>
&lt;td>Multiple configurations for MetricsConfig.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>modules&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,org.apache.dubbo.config.ModuleConfig&amp;gt;&lt;/td>
&lt;td>Multiple configurations for Module.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>monitors&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,org.apache.dubbo.config.MonitorConfig&amp;gt;&lt;/td>
&lt;td>Multiple configurations for Monitor.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>protocols&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,org.apache.dubbo.config.ProtocolConfig&amp;gt;&lt;/td>
&lt;td>Multiple configurations for Protocol.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>providers&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,org.apache.dubbo.config.ProviderConfig&amp;gt;&lt;/td>
&lt;td>Multiple configurations for Provider.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>registries&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,org.apache.dubbo.config.RegistryConfig&amp;gt;&lt;/td>
&lt;td>Multiple configurations for Registry.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>tracings&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,org.apache.dubbo.config.TracingConfig&amp;gt;&lt;/td>
&lt;td>Multiple configurations for TracingConfig.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubboapplication">dubbo.application&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.ApplicationConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>architecture&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Architecture layer.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>auto-trust-serialize-class&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to automatically trust serialized classes.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>check-serializable&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to check serializable.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>compiler&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Java compiler.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>default&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dump-directory&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Directory for saving thread dump.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dump-enable&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to enable saving thread dump or not.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enable-empty-protection&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to enable protection against empty objects.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enable-file-cache&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to enable file caching.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>environment&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Environment, e.g., dev, test, or production.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>executor-management-mode&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Thread pool management mode: 'default' or 'isolation'.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>id&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Identifier for this configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>liveness-probe&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Used to set extensions of the probe in QoS.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>logger&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The type of log access.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>mapping-retry-interval&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The retry interval of service name mapping.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>meta-data&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>metadata-service-port&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Metadata Service, used in Service Discovery.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>metadata-service-protocol&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The protocol used for peer-to-peer metadata transmission.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>metadata-type&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Metadata type, local or remote. If 'remote' is chosen, you need to specify a metadata center further.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>monitor&lt;/td>
&lt;td>org.apache.dubbo.config.MonitorConfig&lt;/td>
&lt;td>Monitor center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>name&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The Application name.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>need-refresh&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Specifies if this configuration should be refreshed (true for refreshing).&lt;/td>
&lt;td>true&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>organization&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The application's organization (BU).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>owner&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The application owner.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>parameters&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>Customized parameters.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>prefixes&lt;/td>
&lt;td>java.util.List&amp;lt;java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>protocol&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The preferred protocol (name) of this application, convenient for places where it's hard to determine the preferred protocol.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>qos-accept-foreign-ip&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Should we accept foreign IP or not?&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>qos-accept-foreign-ip-compatible&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>qos-accept-foreign-ip-whitelist&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>When we disable accepting foreign IP, support specifying foreign IPs in the whitelist.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>qos-accept-foreign-ip-whitelist-compatible&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>qos-anonymous-access-permission-level&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The anonymous (any foreign IP) access permission level, default is NONE, which means no access to any command.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>qos-anonymous-access-permission-level-compatible&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>qos-anonymous-allow-commands&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The anonymous (any foreign IP) allowed commands, default is empty, which means no access to any command.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>qos-check&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether QoS should start successfully or not, will check qosEnable first.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>qos-enable&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to enable Quality of Service (QoS) or not.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>qos-enable-compatible&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>qos-host&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The QoS host to listen.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>qos-host-compatible&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>qos-port&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The QoS port to listen.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>qos-port-compatible&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>readiness-probe&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The probe for checking the readiness of the application.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>register-consumer&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Used to control whether to register the instance with the registry or not. Set to 'false' only when the instance is a pure consumer.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>register-mode&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Register mode.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>registries&lt;/td>
&lt;td>java.util.List&amp;lt;org.apache.dubbo.config.RegistryConfig&amp;gt;&lt;/td>
&lt;td>Registry centers.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>registry&lt;/td>
&lt;td>org.apache.dubbo.config.RegistryConfig&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>registry-ids&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The comma-separated list of registry IDs to which the service will be registered.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>repository&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Repository.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>scope-model&lt;/td>
&lt;td>org.apache.dubbo.rpc.model.ScopeModel&lt;/td>
&lt;td>The scope model of this config instance. &amp;lt;p&amp;gt; &amp;lt;b&amp;gt;NOTE:&amp;lt;/b&amp;gt; the model maybe changed during config processing, the extension spi instance needs to be reinitialized after changing the model!&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>serialize-check-status&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The status of class serialization checking.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>shutwait&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Config the shutdown wait.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>startup-probe&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The probe for checking the startup of the application.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>trust-serialize-class-level&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The trust level for serialized classes.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>version&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The application version.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubboconfig-center">dubbo.config-center&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.ConfigCenterConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>address&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The address (URL or hostname) of the config center server.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>app-config-file&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The properties file under 'configFile' is global shared, while '.properties' under this one is limited only to this application.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>app-external-configuration&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>Application-specific external configuration for the config center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>check&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Behavior when the initial connection attempt to the config center fails. 'true' means interrupt the whole process once a failure occurs. Default value is true.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>cluster&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The config center cluster, its actual meaning may vary depending on the specific config center product.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>config-file&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Key mapping for properties files. Most of the time, you do not need to change this parameter. Default value is CommonConstants.DEFAULT_DUBBO_PROPERTIES.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>default&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>external-configuration&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>External configuration for the config center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>group&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The group of the config center, often used to identify an isolated space for a batch of config items. Its actual meaning depends on the specific config center you use. Default value is CommonConstants.DUBBO.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>highest-priority&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>If the config center should have the highest priority and override all other configurations. Deprecated and no longer used. Default value is true.&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>id&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Identifier for this configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>meta-data&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>namespace&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The namespace of the config center, generally used for multi-tenancy. Its actual meaning depends on the specific config center you use. Default value is CommonConstants.DUBBO.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>need-refresh&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Specifies if this configuration should be refreshed (true for refreshing).&lt;/td>
&lt;td>true&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>parameters&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>Additional parameters specific to your config center product can be added here. For example, with XML: &amp;lt;dubbo:config-center&amp;gt; &amp;lt;dubbo:parameter key=&amp;quot;{your key}&amp;quot; value=&amp;quot;{your value}&amp;quot; /&amp;gt; &amp;lt;/dubbo:config-center&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>password&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Password for authentication with the config center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>port&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The port number for the config center server.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>prefixes&lt;/td>
&lt;td>java.util.List&amp;lt;java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>protocol&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The protocol used for accessing the config center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>scope-model&lt;/td>
&lt;td>org.apache.dubbo.rpc.model.ScopeModel&lt;/td>
&lt;td>The scope model of this config instance. &amp;lt;p&amp;gt; &amp;lt;b&amp;gt;NOTE:&amp;lt;/b&amp;gt; the model maybe changed during config processing, the extension spi instance needs to be reinitialized after changing the model!&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>timeout&lt;/td>
&lt;td>java.lang.Long&lt;/td>
&lt;td>The timeout for accessing the config center. Default value is 30000L.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>username&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Username for authentication with the config center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubboconsumer">dubbo.consumer&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.ConsumerConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>actives&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Maximum concurrent invocations allowed.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>application&lt;/td>
&lt;td>org.apache.dubbo.config.ApplicationConfig&lt;/td>
&lt;td>Application configuration for the service.&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>async&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Enable asynchronous invocation. Note that it is unreliable asynchronous, ignoring return values and not blocking threads.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>auth&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Enable service authentication.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>cache&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Cache provider for caching return results. available options: lru, threadlocal, jcache etc.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>callbacks&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Callback limits for the service.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>check&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Check if service provider exists, if not exists, it will be fast fail&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>client type&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>cluster&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Cluster type for service.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>config-center&lt;/td>
&lt;td>org.apache.dubbo.config.ConfigCenterConfig&lt;/td>
&lt;td>Configuration center settings.&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>connections&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Connection limits: 0 for shared connection, otherwise specifying connections for the service.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>corethreads&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Consumer threadpool core thread size&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>default&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>exported-urls&lt;/td>
&lt;td>java.util.List&amp;lt;org.apache.dubbo.common.URL&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>filter&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Filters for service exposure or reference (multiple filters can be separated by commas).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>forks&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Forks for forking cluster.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>generic&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Whether to use generic interface&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>group&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Group of the remote service referenced by the consumer/provider.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>id&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Identifier for this configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>init&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to eagle-init&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>injvm&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to find reference's instance from the current JVM&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>interface&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>layer&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Layer of service providers.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>lazy&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Lazy create connection&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>listener&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Listeners for service exposure or reference (multiple listeners can be separated by commas).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>loadbalance&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Load balancing strategy for service invocation.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>local&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Local implementation class name for the service interface.&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>merger&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Merger for result data.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>mesh-enable&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>enable mesh mode @since 3.1.0&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>meta-data&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>metadata-report-config&lt;/td>
&lt;td>org.apache.dubbo.config.MetadataReportConfig&lt;/td>
&lt;td>Metadata report configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>methods&lt;/td>
&lt;td>java.util.List&amp;lt;org.apache.dubbo.config.MethodConfig&amp;gt;&lt;/td>
&lt;td>Method-specific configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>mock&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Mock class name to be called when a service fails to execute. The mock doesn't support on the provider side, and it is executed when a non-business exception occurs after a remote service call.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>module&lt;/td>
&lt;td>org.apache.dubbo.config.ModuleConfig&lt;/td>
&lt;td>Module configuration for the service.&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>monitor&lt;/td>
&lt;td>org.apache.dubbo.config.MonitorConfig&lt;/td>
&lt;td>Service monitoring configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>need-refresh&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Specifies if this configuration should be refreshed (true for refreshing).&lt;/td>
&lt;td>true&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>onconnect&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Event handler for connection establishment.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ondisconnect&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Event handler for disconnection.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>owner&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Owner of the service providers.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>parameters&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>Customized parameters for configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>prefixes&lt;/td>
&lt;td>java.util.List&amp;lt;java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>protocol&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Only the service provider of the specified protocol is invoked, and other protocols are ignored.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provided-by&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>declares which app or service this interface belongs to&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider-namespace&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>assign the namespace that provider belong to @since 3.1.1&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>provider-port&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>By VirtualService and DestinationRule, envoy will generate a new route rule,such as 'demo.default.svc.cluster.local:80',the default port is 80. When you want to specify the provider port,you can use this config. @since 3.1.0&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>proxy&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Strategy for generating dynamic agents (options: &amp;quot;jdk&amp;quot; or &amp;quot;javassist&amp;quot;).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>queues&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Consumer threadpool queue size&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>reconnect&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>refer-async&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Weather the reference is referred asynchronously @see ModuleConfig#referAsync @deprecated&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>refer-background&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether refer should run in background or not. @see ModuleConfig#setBackground(Boolean) @deprecated replace with {@link ModuleConfig#setBackground(Boolean)}&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>refer-thread-num&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Thread num for asynchronous refer pool size&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>registries&lt;/td>
&lt;td>java.util.List&amp;lt;org.apache.dubbo.config.RegistryConfig&amp;gt;&lt;/td>
&lt;td>Registries where the service will be registered (use this or registryIds, not both).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>registry&lt;/td>
&lt;td>org.apache.dubbo.config.RegistryConfig&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>registry-ids&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Registry IDs for service registration (use this or registries, not both).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>retries&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Retry times for failed invocations.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>router&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>scope&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Service scope (&amp;quot;local&amp;quot; implies searching in the current JVM only).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>scope-model&lt;/td>
&lt;td>org.apache.dubbo.rpc.model.ScopeModel&lt;/td>
&lt;td>The scope model of this config instance. &amp;lt;p&amp;gt; &amp;lt;b&amp;gt;NOTE:&amp;lt;/b&amp;gt; the model maybe changed during config processing, the extension spi instance needs to be reinitialized after changing the model!&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>sent&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Acknowledge asynchronous-sent invocations.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>shareconnections&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>By default, a TCP long-connection communication is shared between the consumer process and the provider process. This property can be set to share multiple TCP long-connection communications. Note that only the dubbo protocol takes effect.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>singleton&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Use separate instances for services with the same serviceKey (applies when using ReferenceConfig and SimpleReferenceCache together). Directly calling ReferenceConfig.get() will not check this attribute.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>sticky&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>stub&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Local stub class name for the service interface.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>tag&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Custom tag for the service configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>threadpool&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Consumer thread pool type: cached, fixed, limit, eager&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>threads&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Consumer threadpool thread size&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>timeout&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Timeout for remote invocation in milliseconds.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>url-merge-processor&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Url Merge Processor Used to customize the URL merge of consumer and provider&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>validation&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Enable JSR303 standard annotation validation for method parameters.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>version&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Version of the remote service referenced by the consumer/provider.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubbometadata-report">dubbo.metadata-report&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.MetadataReportConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>address&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The address of the metadata center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>check&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Decide the behavior when the initial connection attempt fails, where 'true' means interrupt the whole process once it fails. The default value is true.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>cluster&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to use a cluster configuration for the metadata center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>cycle-report&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>By default, the metadata store will store full metadata repeatedly every day.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>default&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>file&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The file path for saving the metadata center's dynamic list.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>group&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The group for the metadata center, which is similar to the registry group.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>id&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Identifier for this configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>meta-data&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>need-refresh&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Specifies if this configuration should be refreshed (true for refreshing).&lt;/td>
&lt;td>true&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>parameters&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>Customized parameters for the metadata center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>password&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The password used to log in to the metadata center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>port&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The default port for the metadata center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>prefixes&lt;/td>
&lt;td>java.util.List&amp;lt;java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>protocol&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The protocol for the metadata center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>registry&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The registry ID for the metadata center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>report-definition&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to report definition.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>report-metadata&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to report metadata.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>retry-period&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The retry period in milliseconds when connecting to the metadata center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>retry-times&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The number of retry times when connecting to the metadata center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>scope-model&lt;/td>
&lt;td>org.apache.dubbo.rpc.model.ScopeModel&lt;/td>
&lt;td>The scope model of this config instance. &amp;lt;p&amp;gt; &amp;lt;b&amp;gt;NOTE:&amp;lt;/b&amp;gt; the model maybe changed during config processing, the extension spi instance needs to be reinitialized after changing the model!&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>sync-report&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Synchronization report, with the default value as asynchronous.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>timeout&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The request timeout in milliseconds for the metadata center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>username&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The username used to log in to the metadata center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubbometrics">dubbo.metrics&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.MetricsConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>collector-sync-period&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Collector synchronization period.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>default&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enable-collector-sync&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to enable collector synchronization.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enable-jvm&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to enable JVM metrics collection.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enable-metadata&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to enable metadata metrics collection.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enable-metrics-init&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to enable metrics initialization.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enable-netty&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to enable Netty metrics collection.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enable-registry&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to enable registry metrics collection.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enable-rpc&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to enable RPC (Remote Procedure Call) metrics collection.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enable-threadpool&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to enable thread pool metrics collection.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>export-metrics-service&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to export metrics service.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>export-service-port&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Port used for exporting metrics services.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>export-service-protocol&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Protocol used for metrics collection and export.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>id&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Identifier for this configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>meta-data&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>need-refresh&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Specifies if this configuration should be refreshed (true for refreshing).&lt;/td>
&lt;td>true&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>port&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Deprecated: This parameter should no longer be used and will be removed in the future.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>prefixes&lt;/td>
&lt;td>java.util.List&amp;lt;java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>protocol&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Protocol used for metrics.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>rpc-level&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The level of metrics collection, which can be &amp;quot;SERVICE&amp;quot; or &amp;quot;METHOD&amp;quot;. The default is &amp;quot;METHOD&amp;quot;.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>scope-model&lt;/td>
&lt;td>org.apache.dubbo.rpc.model.ScopeModel&lt;/td>
&lt;td>The scope model of this config instance. &amp;lt;p&amp;gt; &amp;lt;b&amp;gt;NOTE:&amp;lt;/b&amp;gt; the model maybe changed during config processing, the extension spi instance needs to be reinitialized after changing the model!&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>use-global-registry&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Decide whether to use the global registry of Micrometer.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubbomodule">dubbo.module&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.ModuleConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>background&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to start the module in the background. If started in the background, it does not await finish on Spring ContextRefreshedEvent. @see org.apache.dubbo.config.spring.context.DubboDeployApplicationListener&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>check-reference-timeout&lt;/td>
&lt;td>java.lang.Long&lt;/td>
&lt;td>The timeout to check references.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>default&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>export-async&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether the service is exported asynchronously.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>export-thread-num&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The thread number for asynchronous export pool size.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>id&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Identifier for this configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>meta-data&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>monitor&lt;/td>
&lt;td>org.apache.dubbo.config.MonitorConfig&lt;/td>
&lt;td>Monitor center&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>name&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The module name&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>need-refresh&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Specifies if this configuration should be refreshed (true for refreshing).&lt;/td>
&lt;td>true&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>organization&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The module's organization&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>owner&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The module owner&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>prefixes&lt;/td>
&lt;td>java.util.List&amp;lt;java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>refer-async&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether the reference is referred asynchronously.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>refer-thread-num&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The thread number for asynchronous reference pool size.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>registries&lt;/td>
&lt;td>java.util.List&amp;lt;org.apache.dubbo.config.RegistryConfig&amp;gt;&lt;/td>
&lt;td>Registry centers&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>registry&lt;/td>
&lt;td>org.apache.dubbo.config.RegistryConfig&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>scope-model&lt;/td>
&lt;td>org.apache.dubbo.rpc.model.ScopeModel&lt;/td>
&lt;td>The scope model of this config instance. &amp;lt;p&amp;gt; &amp;lt;b&amp;gt;NOTE:&amp;lt;/b&amp;gt; the model maybe changed during config processing, the extension spi instance needs to be reinitialized after changing the model!&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>version&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The module version&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubbomonitor">dubbo.monitor&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.MonitorConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>address&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The monitor address&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>default&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>group&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The monitor group&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>id&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Identifier for this configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>interval&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The monitor reporting interval&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>meta-data&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>need-refresh&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Specifies if this configuration should be refreshed (true for refreshing).&lt;/td>
&lt;td>true&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>parameters&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>Customized parameters&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>password&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The monitor password&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>prefixes&lt;/td>
&lt;td>java.util.List&amp;lt;java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>protocol&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The protocol of the monitor. If the value is &amp;quot;registry&amp;quot; it will search the monitor address from the registry center. Otherwise, it will directly connect to the monitor center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>scope-model&lt;/td>
&lt;td>org.apache.dubbo.rpc.model.ScopeModel&lt;/td>
&lt;td>The scope model of this config instance. &amp;lt;p&amp;gt; &amp;lt;b&amp;gt;NOTE:&amp;lt;/b&amp;gt; the model maybe changed during config processing, the extension spi instance needs to be reinitialized after changing the model!&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>username&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The monitor username&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>version&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The monitor version&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubboprotocol">dubbo.protocol&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.ProtocolConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>accepts&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The maximum acceptable connections.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>accesslog&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The access log configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>alive&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The keep-alive time for threads in the thread pool (default unit is TimeUnit.MILLISECONDS).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>buffer&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The buffer size.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>charset&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The character set used for communication.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The client implementation.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>codec&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The protocol codec.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>contextpath&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The context path for the service.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>corethreads&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The core thread size of the thread pool.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>default&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dispatcher&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The thread dispatch mode.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dispather&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>exchanger&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The method of information exchange.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ext-protocol&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Extra protocol for this service, using Port Unification Server.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>extension&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Additional extensions.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>heartbeat&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The interval for sending heartbeats.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>host&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The service's IP address (useful when there are multiple network cards available).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>id&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Identifier for this configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>iothreads&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The fixed size of the IO thread pool.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>json-check-level&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>JSON check level for serialization.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>keep-alive&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Indicates whether it is a persistent connection.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>meta-data&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>name&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The name of the protocol.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>need-refresh&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Specifies if this configuration should be refreshed (true for refreshing).&lt;/td>
&lt;td>true&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>networker&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The networker implementation.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>optimizer&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The optimizer used for dubbo protocol.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>parameters&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>Custom parameters.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>path&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>payload&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The maximum payload length.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>port&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The service's port number.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>prefer-serialization&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Specifies the preferred serialization method for the consumer. If specified, the consumer will use this parameter first. If the Dubbo Sdk you are using contains the serialization type, the serialization method specified by the argument is used. &amp;lt;p&amp;gt; When this parameter is null or the serialization type specified by this parameter does not exist in the Dubbo SDK, the serialization type specified by serialization is used. If the Dubbo SDK if still does not exist, the default type of the Dubbo SDK is used. For Dubbo SDK &amp;gt;= 3.2, &amp;lt;code&amp;gt;preferSerialization&amp;lt;/code&amp;gt; takes precedence over &amp;lt;code&amp;gt;serialization&amp;lt;/code&amp;gt; &amp;lt;p&amp;gt; Supports multiple values separated by commas, e.g., &amp;quot;fastjson2,fastjson,hessian2&amp;quot;.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>prefixes&lt;/td>
&lt;td>java.util.List&amp;lt;java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>prompt&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The command line prompt.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>queues&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The length of the thread pool's queue.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>register&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Indicates whether the service should be registered.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>scope-model&lt;/td>
&lt;td>org.apache.dubbo.rpc.model.ScopeModel&lt;/td>
&lt;td>The scope model of this config instance. &amp;lt;p&amp;gt; &amp;lt;b&amp;gt;NOTE:&amp;lt;/b&amp;gt; the model maybe changed during config processing, the extension spi instance needs to be reinitialized after changing the model!&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>serialization&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The serialization method.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>server&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The server implementation.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ssl-enabled&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Indicates whether SSL is enabled.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>status&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The status check configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>telnet&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Supported Telnet commands, separated by commas.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>thread-pool-exhausted-listeners&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Listeners for exhausted thread pool.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>threadpool&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The name of the thread pool.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>threads&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The fixed size of the thread pool.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>transporter&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The transporter used for communication.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubboprovider">dubbo.provider&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.ProviderConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>accepts&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The maximum number of acceptable connections.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>accesslog&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Whether to export access logs to logs.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>actives&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Maximum concurrent invocations allowed.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>alive&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The keep-alive time of the thread pool, default unit: TimeUnit.MILLISECONDS.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>application&lt;/td>
&lt;td>org.apache.dubbo.config.ApplicationConfig&lt;/td>
&lt;td>Application configuration for the service.&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>async&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Enable asynchronous invocation. Note that it is unreliable asynchronous, ignoring return values and not blocking threads.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>auth&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Enable service authentication.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>buffer&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The size of the network I/O buffer.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>cache&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Cache provider for caching return results. available options: lru, threadlocal, jcache etc.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>callbacks&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Callback limits for the service.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>charset&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The charset used for serialization.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The client-side implementation model of the protocol.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>cluster&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Cluster type for service.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>codec&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The codec used by the protocol.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>config-center&lt;/td>
&lt;td>org.apache.dubbo.config.ConfigCenterConfig&lt;/td>
&lt;td>Configuration center settings.&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>connections&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Connection limits: 0 for shared connection, otherwise specifying connections for the service.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>contextpath&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The context path of the service.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>default&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>delay&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The time delay to register the service (in milliseconds).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>deprecated&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether the service is deprecated.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dispatcher&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The mode of thread dispatching.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dispather&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>document&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Document center for the service.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dynamic&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to register the service as a dynamic service on the registry. If true, the service will be enabled automatically after registration, and manual disabling is required to stop it.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>exchanger&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The method of information exchange.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>executes&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Max allowed executing times.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>executor&lt;/td>
&lt;td>java.util.concurrent.Executor&lt;/td>
&lt;td>used for thread pool isolation between services&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>export&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to export the service.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>export-async&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Weather the service is export asynchronously @deprecated @see ModuleConfig#exportAsync&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>export-background&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether the export should run in the background or not. @deprecated Replace with {@link ModuleConfig#setBackground(Boolean)} @see ModuleConfig#setBackground(Boolean)&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>export-thread-num&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The number of threads for the asynchronous export pool.&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>exported-urls&lt;/td>
&lt;td>java.util.List&amp;lt;org.apache.dubbo.common.URL&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>filter&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Filters for service exposure or reference (multiple filters can be separated by commas).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>forks&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Forks for forking cluster.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>group&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The service group.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>host&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The IP addresses of the service (used when there are multiple network cards available).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>id&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Identifier for this configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>interface&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>iothreads&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The size of the I/O thread pool (fixed size).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>layer&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Layer of service providers.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>listener&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Listeners for service exposure or reference (multiple listeners can be separated by commas).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>loadbalance&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Load balancing strategy for service invocation.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>local&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Local implementation class name for the service interface.&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>merger&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Merger for result data.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>meta-data&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>metadata-report-config&lt;/td>
&lt;td>org.apache.dubbo.config.MetadataReportConfig&lt;/td>
&lt;td>Metadata report configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>methods&lt;/td>
&lt;td>java.util.List&amp;lt;org.apache.dubbo.config.MethodConfig&amp;gt;&lt;/td>
&lt;td>Method-specific configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>mock&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Mock class name to be called when a service fails to execute. The mock doesn't support on the provider side, and it is executed when a non-business exception occurs after a remote service call.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>module&lt;/td>
&lt;td>org.apache.dubbo.config.ModuleConfig&lt;/td>
&lt;td>Module configuration for the service.&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>monitor&lt;/td>
&lt;td>org.apache.dubbo.config.MonitorConfig&lt;/td>
&lt;td>Service monitoring configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>need-refresh&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Specifies if this configuration should be refreshed (true for refreshing).&lt;/td>
&lt;td>true&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>networker&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The networker used by the protocol.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>onconnect&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Event handler for connection establishment.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ondisconnect&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Event handler for disconnection.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>owner&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Owner of the service providers.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>parameters&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>Customized parameters for configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>path&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>payload&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The maximum payload length.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>port&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The port of the service.&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>prefer-serialization&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Specifies the preferred serialization method for the consumer. If specified, the consumer will use this parameter first. If the Dubbo Sdk you are using contains the serialization type, the serialization method specified by the argument is used. &amp;lt;p&amp;gt; When this parameter is null or the serialization type specified by this parameter does not exist in the Dubbo SDK, the serialization type specified by serialization is used. If the Dubbo SDK if still does not exist, the default type of the Dubbo SDK is used. For Dubbo SDK &amp;gt;= 3.2, &amp;lt;code&amp;gt;preferSerialization&amp;lt;/code&amp;gt; takes precedence over &amp;lt;code&amp;gt;serialization&amp;lt;/code&amp;gt; &amp;lt;p&amp;gt; Supports multiple values separated by commas, e.g., &amp;quot;fastjson2,fastjson,hessian2&amp;quot;.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>prefixes&lt;/td>
&lt;td>java.util.List&amp;lt;java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>prompt&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The command line prompt.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>protocol&lt;/td>
&lt;td>org.apache.dubbo.config.ProtocolConfig&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>protocol-ids&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Id list of protocols the service will export with (use this or protocols, not both).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>protocols&lt;/td>
&lt;td>java.util.List&amp;lt;org.apache.dubbo.config.ProtocolConfig&amp;gt;&lt;/td>
&lt;td>List of protocols the service will export with (use this or protocolIds, not both).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>proxy&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Strategy for generating dynamic agents (options: &amp;quot;jdk&amp;quot; or &amp;quot;javassist&amp;quot;).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>queues&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The length of the thread pool queue.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>register&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to register the service.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>registries&lt;/td>
&lt;td>java.util.List&amp;lt;org.apache.dubbo.config.RegistryConfig&amp;gt;&lt;/td>
&lt;td>Registries where the service will be registered (use this or registryIds, not both).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>registry&lt;/td>
&lt;td>org.apache.dubbo.config.RegistryConfig&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>registry-ids&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Registry IDs for service registration (use this or registries, not both).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>retries&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Retry times for failed invocations.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>scope&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Service scope (&amp;quot;local&amp;quot; implies searching in the current JVM only).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>scope-model&lt;/td>
&lt;td>org.apache.dubbo.rpc.model.ScopeModel&lt;/td>
&lt;td>The scope model of this config instance. &amp;lt;p&amp;gt; &amp;lt;b&amp;gt;NOTE:&amp;lt;/b&amp;gt; the model maybe changed during config processing, the extension spi instance needs to be reinitialized after changing the model!&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>sent&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Acknowledge asynchronous-sent invocations.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>serialization&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Serialization type for service communication.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>server&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The server-side implementation model of the protocol.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>singleton&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Use separate instances for services with the same serviceKey (applies when using ReferenceConfig and SimpleReferenceCache together). Directly calling ReferenceConfig.get() will not check this attribute.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>status&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The status check configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>stub&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Local stub class name for the service interface.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>tag&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Custom tag for the service configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>telnet&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Supported telnet commands, separated by commas.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>threadname&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The name of the thread pool.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>threadpool&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The thread pool configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>threads&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The size of the thread pool (fixed size).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>timeout&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Timeout for remote invocation in milliseconds.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>token&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Whether to use a token for authentication.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>transporter&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The transporter used by the protocol.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>use-java-package-as-path&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to use java_package in IDL as path. Default use package. This param only available when service using native stub.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>validation&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Enable JSR303 standard annotation validation for method parameters.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>version&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The service version.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>wait&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The wait time when stopping the service.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>warmup&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Warm-up period for the service.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>weight&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The service weight.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubboregistry">dubbo.registry&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.RegistryConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>accepts&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>List of RPC protocols accepted by this registry, e.g., &amp;quot;dubbo,rest&amp;quot;.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>address&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Register center address.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>check&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to check if the register center is available when booting up.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Client implementation.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>cluster&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Affects how traffic distributes among registries, useful when subscribing to multiple registries. Available options: - &amp;quot;zone-aware&amp;quot;: A certain type of traffic always goes to one Registry according to where the traffic is originated.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>default&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dynamic&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to allow dynamic service registration on the register center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enable-empty-protection&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Enable empty protection.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>extra-keys&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>After simplifying the registry, add some parameters individually, useful for providers. Example: extra-keys = &amp;quot;A, b, c, d&amp;quot;. @since 2.7.0&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>file&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>File for saving the register center dynamic list.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>group&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The group that services registry belongs to.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>id&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Identifier for this configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>meta-data&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>need-refresh&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Specifies if this configuration should be refreshed (true for refreshing).&lt;/td>
&lt;td>true&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>parameters&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>Customized parameters.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>password&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Password to login the register center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>port&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Default port for the register center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>preferred&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Always use this registry first if set to true, useful when subscribing to multiple registries.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>prefixes&lt;/td>
&lt;td>java.util.List&amp;lt;java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>protocol&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Protocol used for the register center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>register&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to allow exporting service on the register center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>register-mode&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Register mode.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>scope-model&lt;/td>
&lt;td>org.apache.dubbo.rpc.model.ScopeModel&lt;/td>
&lt;td>The scope model of this config instance. &amp;lt;p&amp;gt; &amp;lt;b&amp;gt;NOTE:&amp;lt;/b&amp;gt; the model maybe changed during config processing, the extension spi instance needs to be reinitialized after changing the model!&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>secure&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Security settings.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>server&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Server implementation.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>session&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Session timeout in milliseconds for the register center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>simplified&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Simplify the registry, useful for both providers and consumers. @since 2.7.0&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>subscribe&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether to allow subscribing to services on the register center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>timeout&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Connect timeout in milliseconds for the register center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>transport&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>transporter&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Network transmission type.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>use-as-config-center&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Indicates whether the address works as a configuration center or not.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>use-as-metadata-center&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Indicates whether the address works as a remote metadata center or not.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>username&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Username to login the register center.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>version&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Version of the registry.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>wait&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Wait time before stopping.&lt;/td>
&lt;td>&lt;/td>
&lt;td>Reason: null, use for replacement: null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>weight&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Affects traffic distribution among registries, useful when subscribing to multiple registries. Takes effect only when no preferred registry is specified.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>zone&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>The region where the registry belongs, usually used to isolate traffics.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubborpc">dubbo.rpc&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.spring.boot.autoconfigure.DubboConfigurationProperties$RpcConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table>
&lt;h3 id="dubbossl">dubbo.ssl&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.SslConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>ca-address&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Address for Certificate Authority (CA).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ca-cert-path&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Path to the CA certificate file.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client-key-cert-chain-path&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Path to the client's key certificate chain file.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client-key-cert-chain-path-stream&lt;/td>
&lt;td>java.io.InputStream&lt;/td>
&lt;td>Input stream for the client's key certificate chain (if provided).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client-key-password&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Password for the client's private key (if applicable).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client-private-key-path&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Path to the client's private key file.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client-private-key-path-stream&lt;/td>
&lt;td>java.io.InputStream&lt;/td>
&lt;td>Input stream for the client's private key (if provided).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client-trust-cert-collection-path&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Path to the client's trust certificate collection file.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client-trust-cert-collection-path-stream&lt;/td>
&lt;td>java.io.InputStream&lt;/td>
&lt;td>Input stream for the client's trust certificate collection (if provided).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>default&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>env-type&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Environment type for SSL configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>id&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Identifier for this configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>meta-data&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>need-refresh&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Specifies if this configuration should be refreshed (true for refreshing).&lt;/td>
&lt;td>true&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>oidc-token-path&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Path to the OIDC (OpenID Connect) token file.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>prefixes&lt;/td>
&lt;td>java.util.List&amp;lt;java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>scope-model&lt;/td>
&lt;td>org.apache.dubbo.rpc.model.ScopeModel&lt;/td>
&lt;td>The scope model of this config instance. &amp;lt;p&amp;gt; &amp;lt;b&amp;gt;NOTE:&amp;lt;/b&amp;gt; the model maybe changed during config processing, the extension spi instance needs to be reinitialized after changing the model!&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>server-key-cert-chain-path&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Path to the server's key certificate chain file.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>server-key-cert-chain-path-stream&lt;/td>
&lt;td>java.io.InputStream&lt;/td>
&lt;td>Input stream for the server's key certificate chain (if provided).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>server-key-password&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Password for the server's private key (if applicable).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>server-private-key-path&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Path to the server's private key file.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>server-private-key-path-stream&lt;/td>
&lt;td>java.io.InputStream&lt;/td>
&lt;td>Input stream for the server's private key (if provided).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>server-trust-cert-collection-path&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Path to the server's trust certificate collection file.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>server-trust-cert-collection-path-stream&lt;/td>
&lt;td>java.io.InputStream&lt;/td>
&lt;td>Input stream for the server's trust certificate collection (if provided).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubbotracing">dubbo.tracing&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.TracingConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>default&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enabled&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Indicates whether the feature is enabled (default is false).&lt;/td>
&lt;td>false&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>id&lt;/td>
&lt;td>java.lang.String&lt;/td>
&lt;td>Identifier for this configuration.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>meta-data&lt;/td>
&lt;td>java.util.Map&amp;lt;java.lang.String,java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>need-refresh&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Specifies if this configuration should be refreshed (true for refreshing).&lt;/td>
&lt;td>true&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>prefixes&lt;/td>
&lt;td>java.util.List&amp;lt;java.lang.String&amp;gt;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>scope-model&lt;/td>
&lt;td>org.apache.dubbo.rpc.model.ScopeModel&lt;/td>
&lt;td>The scope model of this config instance. &amp;lt;p&amp;gt; &amp;lt;b&amp;gt;NOTE:&amp;lt;/b&amp;gt; the model maybe changed during config processing, the extension spi instance needs to be reinitialized after changing the model!&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubbometricsaggregation">dubbo.metrics.aggregation&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.nested.AggregationConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>bucket-num&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The number of buckets for time window quantile.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enable-qps&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Enable QPS (Queries Per Second) aggregation or not.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enable-request&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Enable Request aggregation or not.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enable-rt&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Enable Response Time aggregation or not.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enable-rt-pxx&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Enable Response Time Percentile (Pxx) aggregation or not.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enabled&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Enable aggregation or not.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>qps-time-window-mill-seconds&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The time window in milliseconds for QPS (Queries Per Second) aggregation.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>time-window-seconds&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>The time window in seconds for time window quantile.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubbometricshistogram">dubbo.metrics.histogram&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.nested.HistogramConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>buckets-ms&lt;/td>
&lt;td>java.lang.Integer[]&lt;/td>
&lt;td>Buckets in milliseconds for the histograms. Defines the histogram bucket boundaries.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>distribution-statistic-expiry-min&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Expiry time in minutes for distribution statistics. After this time, the statistics are expired.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enabled&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether histograms are enabled or not. Default is not enabled (false).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>enabled-percentiles&lt;/td>
&lt;td>java.lang.Boolean&lt;/td>
&lt;td>Whether enabledPercentiles are enabled or not. Default is not enabled (false).&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>max-expected-ms&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Maximum expected value in milliseconds for the histograms. Values higher than this will be considered outliers.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>min-expected-ms&lt;/td>
&lt;td>java.lang.Integer&lt;/td>
&lt;td>Minimum expected value in milliseconds for the histograms. Values lower than this will be considered outliers.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>percentiles&lt;/td>
&lt;td>java.lang.Double[]&lt;/td>
&lt;td>Array of percentiles to be calculated for the histograms. Each percentile is a double value.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dubbometricsprometheus">dubbo.metrics.prometheus&lt;/h3>
&lt;p>&lt;strong>Class:&lt;/strong> &lt;code>org.apache.dubbo.config.nested.PrometheusConfig&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default value&lt;/th>
&lt;th>Deprecation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table>
&lt;h3 id="method">method&lt;/h3>
&lt;p>方法级配置。&lt;/p>
&lt;blockquote>
&lt;p>对应的配置类： &lt;code>org.apache.dubbo.config.MethodConfig&lt;/code>。同时该标签为 &lt;code>service&lt;/code> 或 &lt;code>reference&lt;/code> 的子标签，用于控制到方法级。&lt;/p>
&lt;/blockquote>
&lt;p>比如:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">&amp;lt;dubbo:reference&lt;/span> interface=&lt;span style="color:#2aa198">&amp;#34;com.xxx.XxxService&amp;#34;&lt;/span>&lt;span style="color:#268bd2">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:method&lt;/span> name=&lt;span style="color:#2aa198">&amp;#34;findXxx&amp;#34;&lt;/span> timeout=&lt;span style="color:#2aa198">&amp;#34;3000&amp;#34;&lt;/span> retries=&lt;span style="color:#2aa198">&amp;#34;2&amp;#34;&lt;/span> &lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">&amp;lt;/dubbo:reference&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>属性&lt;/th>
&lt;th>对应URL参数&lt;/th>
&lt;th>类型&lt;/th>
&lt;th>是否必填&lt;/th>
&lt;th>缺省值&lt;/th>
&lt;th>作用&lt;/th>
&lt;th>描述&lt;/th>
&lt;th>兼容性&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>name&lt;/td>
&lt;td>&lt;/td>
&lt;td>string&lt;/td>
&lt;td>&lt;b>必填&lt;/b>&lt;/td>
&lt;td>&lt;/td>
&lt;td>标识&lt;/td>
&lt;td>方法名&lt;/td>
&lt;td>1.0.8以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>timeout&lt;/td>
&lt;td>&amp;lt;methodName&amp;gt;.timeout&lt;/td>
&lt;td>int&lt;/td>
&lt;td>可选&lt;/td>
&lt;td>缺省为的timeout&lt;/td>
&lt;td>性能调优&lt;/td>
&lt;td>方法调用超时时间(毫秒)&lt;/td>
&lt;td>1.0.8以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>retries&lt;/td>
&lt;td>&amp;lt;methodName&amp;gt;.retries&lt;/td>
&lt;td>int&lt;/td>
&lt;td>可选&lt;/td>
&lt;td>缺省为&amp;lt;dubbo:reference&amp;gt;的retries&lt;/td>
&lt;td>性能调优&lt;/td>
&lt;td>远程服务调用重试次数，不包括第一次调用，不需要重试请设为0&lt;/td>
&lt;td>2.0.0以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>loadbalance&lt;/td>
&lt;td>&amp;lt;methodName&amp;gt;.loadbalance&lt;/td>
&lt;td>string&lt;/td>
&lt;td>可选&lt;/td>
&lt;td>缺省为的loadbalance&lt;/td>
&lt;td>性能调优&lt;/td>
&lt;td>负载均衡策略，可选值：&lt;br/>&lt;br/>* random - 随机; &lt;br/>&lt;br/>* roundrobin - 轮询; &lt;br/>&lt;br/>* leastactive - 最少活跃调用; &lt;br/>&lt;br/>* consistenthash - 哈希一致 (2.1.0以上版本); &lt;br/>&lt;br/>* shortestresponse - 最短响应 (2.7.7以上版本);&lt;/td>
&lt;td>2.0.0以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>async&lt;/td>
&lt;td>&amp;lt;methodName&amp;gt;.async&lt;/td>
&lt;td>boolean&lt;/td>
&lt;td>可选&lt;/td>
&lt;td>缺省为&amp;lt;dubbo:reference&amp;gt;的async&lt;/td>
&lt;td>性能调优&lt;/td>
&lt;td>是否异步执行，不可靠异步，只是忽略返回值，不阻塞执行线程&lt;/td>
&lt;td>1.0.9以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>sent&lt;/td>
&lt;td>&amp;lt;methodName&amp;gt;.sent&lt;/td>
&lt;td>boolean&lt;/td>
&lt;td>可选&lt;/td>
&lt;td>true&lt;/td>
&lt;td>性能调优&lt;/td>
&lt;td>异步调用时，标记sent=true时，表示网络已发出数据&lt;/td>
&lt;td>2.0.6以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>actives&lt;/td>
&lt;td>&amp;lt;methodName&amp;gt;.actives&lt;/td>
&lt;td>int&lt;/td>
&lt;td>可选&lt;/td>
&lt;td>0&lt;/td>
&lt;td>性能调优&lt;/td>
&lt;td>每服务消费者最大并发调用限制&lt;/td>
&lt;td>2.0.5以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>executes&lt;/td>
&lt;td>&amp;lt;methodName&amp;gt;.executes&lt;/td>
&lt;td>int&lt;/td>
&lt;td>可选&lt;/td>
&lt;td>0&lt;/td>
&lt;td>性能调优&lt;/td>
&lt;td>每服务每方法最大使用线程数限制- -，此属性只在&amp;lt;dubbo:method&amp;gt;作为&amp;lt;dubbo:service&amp;gt;子标签时有效&lt;/td>
&lt;td>2.0.5以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>deprecated&lt;/td>
&lt;td>&amp;lt;methodName&amp;gt;.deprecated&lt;/td>
&lt;td>boolean&lt;/td>
&lt;td>可选&lt;/td>
&lt;td>false&lt;/td>
&lt;td>服务治理&lt;/td>
&lt;td>服务方法是否过时，此属性只在&amp;lt;dubbo:method&amp;gt;作为&amp;lt;dubbo:service&amp;gt;子标签时有效&lt;/td>
&lt;td>2.0.5以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>sticky&lt;/td>
&lt;td>&amp;lt;methodName&amp;gt;.sticky&lt;/td>
&lt;td>boolean&lt;/td>
&lt;td>可选&lt;/td>
&lt;td>false&lt;/td>
&lt;td>服务治理&lt;/td>
&lt;td>设置true 该接口上的所有方法使用同一个provider.如果需要更复杂的规则，请使用路由&lt;/td>
&lt;td>2.0.6以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>return&lt;/td>
&lt;td>&amp;lt;methodName&amp;gt;.return&lt;/td>
&lt;td>boolean&lt;/td>
&lt;td>可选&lt;/td>
&lt;td>true&lt;/td>
&lt;td>性能调优&lt;/td>
&lt;td>方法调用是否需要返回值,async设置为true时才生效，如果设置为true，则返回future，或回调onreturn等方法，如果设置为false，则请求发送成功后直接返回Null&lt;/td>
&lt;td>2.0.6以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>oninvoke&lt;/td>
&lt;td>attribute属性，不在URL中体现&lt;/td>
&lt;td>String&lt;/td>
&lt;td>可选&lt;/td>
&lt;td>&lt;/td>
&lt;td>性能调优&lt;/td>
&lt;td>实例执行前拦截&lt;/td>
&lt;td>2.0.6以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>onreturn&lt;/td>
&lt;td>attribute属性，不在URL中体现&lt;/td>
&lt;td>String&lt;/td>
&lt;td>可选&lt;/td>
&lt;td>&lt;/td>
&lt;td>性能调优&lt;/td>
&lt;td>实例执行返回后拦截&lt;/td>
&lt;td>2.0.6以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>onthrow&lt;/td>
&lt;td>attribute属性，不在URL中体现&lt;/td>
&lt;td>String&lt;/td>
&lt;td>可选&lt;/td>
&lt;td>&lt;/td>
&lt;td>性能调优&lt;/td>
&lt;td>实例执行有异常拦截&lt;/td>
&lt;td>2.0.6以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>oninvokeMethod&lt;/td>
&lt;td>attribute属性，不在URL中体现&lt;/td>
&lt;td>String&lt;/td>
&lt;td>可选&lt;/td>
&lt;td>&lt;/td>
&lt;td>性能调优&lt;/td>
&lt;td>方法执行前拦截&lt;/td>
&lt;td>2.0.6以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>onreturnMethod&lt;/td>
&lt;td>attribute属性，不在URL中体现&lt;/td>
&lt;td>String&lt;/td>
&lt;td>可选&lt;/td>
&lt;td>&lt;/td>
&lt;td>性能调优&lt;/td>
&lt;td>方法执行返回后拦截&lt;/td>
&lt;td>2.0.6以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>onthrowMethod&lt;/td>
&lt;td>attribute属性，不在URL中体现&lt;/td>
&lt;td>String&lt;/td>
&lt;td>可选&lt;/td>
&lt;td>&lt;/td>
&lt;td>性能调优&lt;/td>
&lt;td>方法执行有异常拦截&lt;/td>
&lt;td>2.0.6以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>cache&lt;/td>
&lt;td>&amp;lt;methodName&amp;gt;.cache&lt;/td>
&lt;td>string/boolean&lt;/td>
&lt;td>可选&lt;/td>
&lt;td>&lt;/td>
&lt;td>服务治理&lt;/td>
&lt;td>以调用参数为key，缓存返回结果，可选：lru, threadlocal, jcache等&lt;/td>
&lt;td>2.1.0以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>validation&lt;/td>
&lt;td>&amp;lt;methodName&amp;gt;.validation&lt;/td>
&lt;td>boolean&lt;/td>
&lt;td>可选&lt;/td>
&lt;td>&lt;/td>
&lt;td>服务治理&lt;/td>
&lt;td>是否启用JSR303标准注解验证，如果启用，将对方法参数上的注解进行校验&lt;/td>
&lt;td>2.1.0以上版本&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="argument">argument&lt;/h3>
&lt;p>方法参数配置。&lt;/p>
&lt;blockquote>
&lt;p>对应的配置类： &lt;code>org.apache.dubbo.config.ArgumentConfig&lt;/code>。该标签为 &lt;code>method&lt;/code> 的子标签，用于方法参数的特征描述，比如 XML 格式：&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">&amp;lt;dubbo:method&lt;/span> name=&lt;span style="color:#2aa198">&amp;#34;findXxx&amp;#34;&lt;/span> timeout=&lt;span style="color:#2aa198">&amp;#34;3000&amp;#34;&lt;/span> retries=&lt;span style="color:#2aa198">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#268bd2">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:argument&lt;/span> index=&lt;span style="color:#2aa198">&amp;#34;0&amp;#34;&lt;/span> callback=&lt;span style="color:#2aa198">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">&amp;lt;/dubbo:method&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>属性&lt;/th>
&lt;th>对应URL参数&lt;/th>
&lt;th>类型&lt;/th>
&lt;th>是否必填&lt;/th>
&lt;th>缺省值&lt;/th>
&lt;th>作用&lt;/th>
&lt;th>描述&lt;/th>
&lt;th>兼容性&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>index&lt;/td>
&lt;td>&lt;/td>
&lt;td>int&lt;/td>
&lt;td>&lt;b>必填&lt;/b>&lt;/td>
&lt;td>&lt;/td>
&lt;td>标识&lt;/td>
&lt;td>参数索引&lt;/td>
&lt;td>2.0.6以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>type&lt;/td>
&lt;td>&lt;/td>
&lt;td>String&lt;/td>
&lt;td>与index二选一&lt;/td>
&lt;td>&lt;/td>
&lt;td>标识&lt;/td>
&lt;td>通过参数类型查找参数的index&lt;/td>
&lt;td>2.0.6以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>callback&lt;/td>
&lt;td>&amp;lt;metodName&amp;gt;&amp;lt;index&amp;gt;.callback&lt;/td>
&lt;td>boolean&lt;/td>
&lt;td>可选&lt;/td>
&lt;td>&lt;/td>
&lt;td>服务治理&lt;/td>
&lt;td>参数是否为callback接口，如果为callback，服务提供方将生成反向代理，可以从服务提供方反向调用消费方，通常用于事件推送.&lt;/td>
&lt;td>2.0.6以上版本&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="parameter">parameter&lt;/h3>
&lt;p>选项参数配置。&lt;/p>
&lt;blockquote>
&lt;p>对应的配置类：&lt;code>java.util.Map&lt;/code>。同时该标签为 &lt;code>protocol&lt;/code> 或 &lt;code>service&lt;/code> 或 &lt;code>provider&lt;/code> 或 &lt;code>reference&lt;/code> 或 &lt;code>consumer&lt;/code> 或 &lt;code>monitor&lt;/code> 或 &lt;code>registry&lt;/code> 或 &lt;code>metadata-config&lt;/code> 或 &lt;code>config-center&lt;/code> 的子标签，用于配置自定义参数，该配置项将作为扩展点设置自定义参数使用。&lt;/p>
&lt;/blockquote>
&lt;p>比如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">&amp;lt;dubbo:protocol&lt;/span> name=&lt;span style="color:#2aa198">&amp;#34;napoli&amp;#34;&lt;/span>&lt;span style="color:#268bd2">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:parameter&lt;/span> key=&lt;span style="color:#2aa198">&amp;#34;http://10.20.160.198/wiki/display/dubbo/napoli.queue.name&amp;#34;&lt;/span> value=&lt;span style="color:#2aa198">&amp;#34;xxx&amp;#34;&lt;/span> &lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">&amp;lt;/dubbo:protocol&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">&amp;lt;dubbo:protocol&lt;/span> name=&lt;span style="color:#2aa198">&amp;#34;jms&amp;#34;&lt;/span> p:queue=&lt;span style="color:#2aa198">&amp;#34;xxx&amp;#34;&lt;/span> &lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>属性&lt;/th>
&lt;th>对应URL参数&lt;/th>
&lt;th>类型&lt;/th>
&lt;th>是否必填&lt;/th>
&lt;th>缺省值&lt;/th>
&lt;th>作用&lt;/th>
&lt;th>描述&lt;/th>
&lt;th>兼容性&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>key&lt;/td>
&lt;td>key&lt;/td>
&lt;td>string&lt;/td>
&lt;td>&lt;b>必填&lt;/b>&lt;/td>
&lt;td>&lt;/td>
&lt;td>服务治理&lt;/td>
&lt;td>路由参数键&lt;/td>
&lt;td>2.0.0以上版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>value&lt;/td>
&lt;td>value&lt;/td>
&lt;td>string&lt;/td>
&lt;td>&lt;b>必填&lt;/b>&lt;/td>
&lt;td>&lt;/td>
&lt;td>服务治理&lt;/td>
&lt;td>路由参数值&lt;/td>
&lt;td>2.0.0以上版本&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item></channel></rss>